// =============================================================================
// =          SCRIPT PRINCIPAL - GERADOR DE AVALIA√á√ÉO PSICOSSOCIAL           =
// =============================================================================
// Vers√£o: 2.5 (Refinamento P√°gina 2 - Layout Simplificado e Texto)
// =============================================================================

/**
 * @OnlyCurrentDoc // Necess√°rio para PropertiesService.getScriptProperties()
 */

// -------------------------------------
// --- CONFIGURA√á√ÉO - IDs dos Templates ---
// -------------------------------------
// !! IDs REAIS DOS SEUS ARQUIVOS MODELO !!
const FORM_TEMPLATE_ID = "1WVvd0VUlkLe7iznvBSvyEP_xyuQD8zLguwi_fxJIMaE"; // OK
const DASHBOARD_TEMPLATE_ID = "15Z7oI5uPIzQ_ukDztDD6CMNTw5wUbueLuooW45Yrhkk"; // OK
const REPORT_TEMPLATE_ID = "1ReWo-vQbadoyjSvm-0vEzeqz7PVoZz04m6U_CzvyU64"; // OK (Planilha)

// --- Outras Configura√ß√µes ---
// A Chave da API TinyURL foi salva via setupTinyUrlApiKey().
const TINYURL_API_URL = "https://api.tinyurl.com/create";

// --- Constantes de C√°lculo ---
const questionColumnStartIndex = 3; // Coluna D na planilha de RESPOSTAS (A=TS, B=Email, C=Nome, D=Q1...)
const categoryMapping = { // Mapeia NOME da categoria para √çNDICES das perguntas (base 0)
    "RECOMPENSAS E DESENVOLVIMENTO":        [0, 5, 10, 15, 20, 25],
    "AMBIENTE DE TRABALHO E COMUNICA√á√ÉO":   [1, 6, 11, 16, 21, 26],
    "ORGANIZA√á√ÉO E DEMANDAS DO TRABALHO": [2, 7, 12, 17, 22, 27],
    "LIDERAN√áA E GEST√ÉO":                   [3, 8, 13, 18, 23, 28],
    "RELA√á√ïES INTERPESSOAIS E APOIO SOCIAL":[4, 9, 14, 19, 24, 29]
};
const numberOfQuestionsPerCategory = 6;
const maxScorePerQuestion = 4;
const maxScorePerCategory = numberOfQuestionsPerCategory * maxScorePerQuestion; // 24
const scoreMap = { // Mapeia RESPOSTA TEXTUAL para PONTUA√á√ÉO (0=Melhor, 4=Pior)
    "üòÉ Concordo totalmente": 0,
    "üôÇ Concordo parcialmente": 1,
    "üòê N√£o concordo nem discordo": 2,
    "üòï Discordo parcialmente": 3,
    "‚òπÔ∏è Discordo totalmente": 4
};

// =============================================================================
// =    MAPEAMENTO DE ITENS, RISCOS E SUGEST√ïES (P√ÅGINA 2 DO RELAT√ìRIO)       =
// =============================================================================
// Array contendo detalhes para cada uma das 30 perguntas
const questionsDetails = [
  // √çndice 0 (Cat 1)
  { index: 0, text: "Minha remunera√ß√£o √© justa e adequada √†s atividades que realizo.", risk: "Colaboradores percebem a remunera√ß√£o como injusta ou inadequada para suas fun√ß√µes.", suggestions: ["Realizar an√°lise de cargos e sal√°rios comparativa com o mercado.", "Revisar e garantir a equidade interna da estrutura salarial.", "Comunicar com transpar√™ncia a pol√≠tica de remunera√ß√£o e crit√©rios de progress√£o.", "Avaliar se as descri√ß√µes de cargo correspondem √†s responsabilidades atuais."] },
  // √çndice 1 (Cat 2)
  { index: 1, text: "O ambiente de trabalho oferece condi√ß√µes adequadas de conforto, com boa temperatura, ilumina√ß√£o, n√≠vel de ru√≠do e mobili√°rio ergon√¥mico.", risk: "Colaboradores sentem que o ambiente f√≠sico n√£o oferece conforto adequado (t√©rmico, luminoso, ac√∫stico, ergon√¥mico).", suggestions: ["Realizar avalia√ß√µes ergon√¥micas e fornecer mobili√°rio ajust√°vel.", "Monitorar e ajustar temperatura, ventila√ß√£o e n√≠veis de ru√≠do.", "Verificar e adequar a ilumina√ß√£o para as tarefas, evitando reflexos e sombras.", "Manter canais abertos para feedback sobre o conforto e agir sobre as queixas."] },
  // √çndice 2 (Cat 3)
  { index: 2, text: "Tenho autonomia para tomar decis√µes relacionadas ao meu trabalho.", risk: "Sensa√ß√£o de falta de autonomia ou poder de decis√£o sobre o pr√≥prio trabalho.", suggestions: ["Revisar os n√≠veis de delega√ß√£o e empoderamento para cada fun√ß√£o.", "Definir claramente os limites de autonomia e as responsabilidades associadas.", "Capacitar os colaboradores para que possam exercer a autonomia de forma eficaz.", "Incentivar a participa√ß√£o dos colaboradores na tomada de decis√µes que afetam seu trabalho."] },
  // √çndice 3 (Cat 4)
  { index: 3, text: "Recebo apoio adequado do meu gestor quando preciso resolver problemas relacionados ao trabalho.", risk: "Falta de percep√ß√£o de apoio adequado por parte do gestor direto.", suggestions: ["Capacitar os gestores em habilidades de escuta ativa, feedback e suporte √† equipe.", "Estabelecer rotinas de acompanhamento individual (one-on-ones) focadas em desafios e apoio.", "Incentivar os gestores a estarem dispon√≠veis e acess√≠veis para suas equipes.", "Definir claramente os canais e processos para solicitar ajuda ou escalonar problemas."] },
   // √çndice 4 (Cat 5)
  { index: 4, text: "Os colegas se d√£o bem.", risk: "Percep√ß√£o de um clima ruim ou de conflito entre os colegas de trabalho.", suggestions: ["Promover atividades de integra√ß√£o e team building (com cuidado para n√£o for√ßar).","Oferecer treinamentos em comunica√ß√£o assertiva e resolu√ß√£o de conflitos.","Mediar conflitos interpessoais de forma construtiva quando necess√°rio.","Estabelecer e refor√ßar normas de conviv√™ncia e respeito m√∫tuo."] },
  // √çndice 5 (Cat 1)
  { index: 5, text: "Os benef√≠cios oferecidos pela empresa s√£o adequados e satisfat√≥rios.", risk: "H√° insatisfa√ß√£o com o pacote de benef√≠cios oferecido.", suggestions: ["Realizar pesquisa de satisfa√ß√£o focada nos benef√≠cios atuais e desejados.", "Analisar a competitividade do pacote em rela√ß√£o ao mercado e setor.", "Considerar a oferta de benef√≠cios flex√≠veis ou op√ß√µes que atendam a diferentes perfis.", "Comunicar claramente o valor e as regras de uso dos benef√≠cios existentes."] },
   // √çndice 6 (Cat 2)
  { index: 6, text: "As instala√ß√µes e equipamentos s√£o modernos, garantindo seguran√ßa e baixo risco de acidentes no trabalho.", risk: "Percep√ß√£o de que as instala√ß√µes ou equipamentos s√£o antigos, inadequados ou inseguros.", suggestions: ["Realizar inspe√ß√µes de seguran√ßa regulares nas instala√ß√µes e equipamentos.","Implementar um plano de manuten√ß√£o preventiva e atualiza√ß√£o de equipamentos.","Fornecer Equipamentos de Prote√ß√£o Individual (EPIs) adequados e treinar sobre seu uso.","Investigar todos os incidentes e acidentes para identificar e corrigir causas ra√≠zes."] },
   // √çndice 7 (Cat 3)
  { index: 7, text: "Minha fun√ß√£o e responsabilidades s√£o claras e bem definidas, sem contradi√ß√µes ou ambiguidades.", risk: "Percep√ß√£o de ambiguidade, falta de clareza ou contradi√ß√µes nas fun√ß√µes e responsabilidades.", suggestions: ["Revisar e atualizar as descri√ß√µes de cargo, garantindo clareza e precis√£o.","Realizar reuni√µes de alinhamento para definir pap√©is e responsabilidades em projetos e equipes.","Garantir que as expectativas sobre cada fun√ß√£o sejam comunicadas de forma expl√≠cita.","Criar um organograma claro e acess√≠vel."] },
   // √çndice 8 (Cat 4)
  { index: 8, text: "Meu gestor exerce sua lideran√ßa de forma respeitosa, sem utilizar sua posi√ß√£o para impor poder de forma autorit√°ria.", risk: "Percep√ß√£o de um estilo de lideran√ßa autorit√°rio ou desrespeitoso por parte do gestor.", suggestions: ["Promover treinamentos em lideran√ßa humanizada, comunica√ß√£o n√£o-violenta e gest√£o participativa.","Definir e comunicar as compet√™ncias de lideran√ßa esperadas na empresa.","Implementar avalia√ß√µes de desempenho 360¬∫ (ou para cima) para feedback sobre a lideran√ßa.","Oferecer coaching ou mentoria para gestores que precisam desenvolver um estilo mais colaborativo."] },
   // √çndice 9 (Cat 5)
  { index: 9, text: "Os colegas se ajudam.", risk: "Falta de percep√ß√£o de ajuda m√∫tua e colabora√ß√£o entre os colegas.", suggestions: ["Incentivar e reconhecer publicamente comportamentos de ajuda e colabora√ß√£o.","Estruturar projetos ou tarefas que demandem trabalho em equipe.","Criar programas de mentoria ou apadrinhamento entre colegas.","Facilitar espa√ßos para troca de conhecimento e suporte m√∫tuo."] },
   // √çndice 10 (Cat 1)
  { index: 10, text: "Existem oportunidades justas de crescimento e promo√ß√£o na empresa.", risk: "A percep√ß√£o √© de falta de justi√ßa ou clareza nas oportunidades de crescimento e promo√ß√£o.", suggestions: ["Definir e comunicar claramente os crit√©rios para progress√£o de carreira e promo√ß√µes.", "Implementar processos de avalia√ß√£o de desempenho transparentes e baseados em m√©rito.", "Investir em planos de desenvolvimento individual (PDIs) alinhados √†s oportunidades internas.", "Garantir que as oportunidades sejam divulgadas amplamente e acess√≠veis a todos."] },
  // √çndice 11 (Cat 2)
  { index: 11, text: "Os funcion√°rios em geral demonstram satisfa√ß√£o em trabalhar na empresa.", risk: "Baixa percep√ß√£o de satisfa√ß√£o geral entre os funcion√°rios.", suggestions: ["Realizar pesquisas de clima organizacional aprofundadas para identificar os motivos da insatisfa√ß√£o.", "Analisar os resultados das outras categorias desta avalia√ß√£o para encontrar correla√ß√µes.", "Desenvolver planos de a√ß√£o focados nas √°reas mais cr√≠ticas identificadas.", "Promover uma cultura de feedback e comunica√ß√£o aberta para entender as preocupa√ß√µes."] },
  // √çndice 12 (Cat 3)
  { index: 12, text: "Minha carga de trabalho √© adequada, permitindo que eu realize minhas tarefas sem exaust√£o frequente.", risk: "Percep√ß√£o de sobrecarga de trabalho, levando √† exaust√£o frequente.", suggestions: ["Analisar a distribui√ß√£o de tarefas e o volume de trabalho por fun√ß√£o/equipe.","Identificar e otimizar processos de trabalho para eliminar gargalos e retrabalho.","Promover o planejamento, a prioriza√ß√£o de tarefas e o uso de ferramentas de gest√£o do tempo.","Discutir abertamente as demandas com as equipes e avaliar a necessidade de recursos adicionais.","Incentivar pausas e o respeito aos limites da jornada de trabalho."] },
   // √çndice 13 (Cat 4)
  { index: 13, text: "Meu trabalho n√£o √© controlado de forma excessiva ou desnecess√°ria pelo meu gestor.", risk: "Sensa√ß√£o de microgerenciamento ou controle excessivo por parte da lideran√ßa.", suggestions: ["Discutir e alinhar n√≠veis adequados de autonomia e acompanhamento para cada fun√ß√£o/tarefa.","Capacitar gestores a focar no acompanhamento de resultados e metas, e n√£o apenas no processo.","Promover uma cultura de confian√ßa e responsabilidade m√∫tua.","Incentivar a delega√ß√£o eficaz de tarefas e decis√µes."] },
  // √çndice 14 (Cat 5)
  { index: 14, text: "Sinto-me integrado √† equipe, sem ser tratado com indiferen√ßa ou isolamento no ambiente de trabalho.", risk: "Sentimento de isolamento, exclus√£o ou indiferen√ßa por parte da equipe.", suggestions: ["Promover pr√°ticas inclusivas na integra√ß√£o de novos membros e no dia a dia.","Incentivar a participa√ß√£o de todos em reuni√µes e atividades sociais (respeitando prefer√™ncias individuais).","Observar e intervir em din√¢micas de grupo que possam levar √† exclus√£o (\"panelinhas\").","Garantir que todos tenham oportunidades iguais de contribuir e serem ouvidos."] },
   // √çndice 15 (Cat 1)
  { index: 15, text: "Sou reconhecido e recompensado quando fa√ßo um bom trabalho.", risk: "Falta de percep√ß√£o de reconhecimento ou recompensa pelo bom desempenho.", suggestions: ["Implementar programas formais e informais de reconhecimento (elogios, b√¥nus, pr√™mios, etc.).", "Capacitar gestores para fornecer feedback positivo e reconhecimento frequente.", "Vincular, quando poss√≠vel, recompensas tang√≠veis a metas e resultados claros.", "Celebrar conquistas individuais e de equipe."] },
   // √çndice 16 (Cat 2)
  { index: 16, text: "A comunica√ß√£o no meu time funciona bem.", risk: "Percep√ß√£o de falhas na comunica√ß√£o dentro da pr√≥pria equipe.", suggestions: ["Estabelecer rotinas claras de comunica√ß√£o na equipe (reuni√µes, relat√≥rios, ferramentas).","Incentivar o feedback aberto e honesto entre os membros da equipe.","Capacitar o l√≠der da equipe em habilidades de comunica√ß√£o e facilita√ß√£o.","Utilizar ferramentas colaborativas que facilitem a troca de informa√ß√µes."] },
   // √çndice 17 (Cat 3)
  { index: 17, text: "As metas estabelecidas pela empresa s√£o realistas e poss√≠veis de serem alcan√ßadas com os recursos dispon√≠veis.", risk: "As metas s√£o percebidas como irrealistas ou inating√≠veis com os recursos atuais.", suggestions: ["Revisar o processo de defini√ß√£o de metas, envolvendo os colaboradores na sua defini√ß√£o (metas SMART).","Garantir que os recursos necess√°rios (tempo, or√ßamento, ferramentas, pessoal) estejam dispon√≠veis para atingir as metas.","Monitorar o progresso das metas e ajustar os planos conforme necess√°rio.","Comunicar claramente como as metas individuais/setoriais contribuem para os objetivos gerais."] },
  // √çndice 18 (Cat 4)
  { index: 18, text: "No meu ambiente de trabalho n√£o ocorrem situa√ß√µes de ass√©dio por parte dos gestores.", risk: "H√° percep√ß√£o da ocorr√™ncia de situa√ß√µes que podem ser interpretadas como ass√©dio (moral/sexual) originadas na gest√£o.", suggestions: ["URGENTE: Refor√ßar pol√≠tica de toler√¢ncia zero e canais de den√∫ncia seguros.","Treinamento obrigat√≥rio sobre ass√©dio, com √™nfase nas responsabilidades da lideran√ßa.","Investiga√ß√£o rigorosa e imparcial de qualquer alega√ß√£o.","Monitoramento cont√≠nuo do comportamento dos gestores e do clima organizacional.","Consequ√™ncias claras para casos comprovados de ass√©dio."] },
  // √çndice 19 (Cat 5)
  { index: 19, text: "No ambiente de trabalho n√£o ocorrem situa√ß√µes de humilha√ß√£o, piadas ofensivas ou comportamentos vexat√≥rios entre colegas.", risk: "Percep√ß√£o da ocorr√™ncia de humilha√ß√µes, piadas ofensivas ou comportamentos vexat√≥rios entre colegas.", suggestions: ["Implementar e comunicar uma pol√≠tica clara contra qualquer tipo de desrespeito ou humilha√ß√£o.","Realizar campanhas de conscientiza√ß√£o sobre comunica√ß√£o respeitosa e os limites do humor no trabalho.","Disponibilizar canais seguros para relatar tais comportamentos.","Aplicar medidas corretivas e educativas quando esses comportamentos ocorrerem."] },
   // √çndice 20 (Cat 1)
  { index: 20, text: "S√£o oferecidos supervis√µes e treinamentos peri√≥dicos que me ajudam a desenvolver minhas habilidades profissionais.", risk: "Percep√ß√£o de que a supervis√£o ou os treinamentos oferecidos s√£o insuficientes ou inadequados para o desenvolvimento profissional.", suggestions: ["Realizar levantamento de necessidades de treinamento (LNT) junto aos colaboradores.", "Estruturar um programa de treinamentos alinhado √†s necessidades do neg√≥cio e dos funcion√°rios.", "Garantir que a supervis√£o inclua feedback regular e orienta√ß√£o para o desenvolvimento.", "Oferecer diferentes modalidades de aprendizado (cursos, workshops, mentorias, job rotation)."] },
  // √çndice 21 (Cat 2)
  { index: 21, text: "As informa√ß√µes importantes chegam r√°pido.", risk: "Percep√ß√£o de lentid√£o ou demora na chegada de informa√ß√µes relevantes para o trabalho.", suggestions: ["Mapear os fluxos de informa√ß√£o e identificar gargalos.","Definir canais de comunica√ß√£o oficiais e eficientes para diferentes tipos de informa√ß√£o.","Utilizar tecnologia (intranet, comunicados, grupos) para agilizar a dissemina√ß√£o.","Capacitar gestores sobre a import√¢ncia da comunica√ß√£o r√°pida e transparente."] },
  // √çndice 22 (Cat 3)
  { index: 22, text: "Consigo realizar minhas tarefas sem sentimentos constantes de ansiedade ou tens√£o.", risk: "O trabalho gera sentimentos constantes de ansiedade ou tens√£o nos colaboradores.", suggestions: ["Investigar as causas raiz da ansiedade/tens√£o (sobrecarga, falta de clareza, press√£o, conflitos, etc.).","Implementar a√ß√µes focadas nas causas identificadas (ver outras sugest√µes).","Oferecer programas de apoio ao bem-estar e gerenciamento do estresse.","Promover um ambiente de trabalho psicologicamente seguro onde as preocupa√ß√µes possam ser expressas.","Capacitar l√≠deres para identificar sinais de estresse e oferecer suporte."] },
   // √çndice 23 (Cat 4)
  { index: 23, text: "Existe coopera√ß√£o e bom relacionamento entre os setores.", risk: "Falta de coopera√ß√£o ou relacionamento ruim entre diferentes setores da empresa.", suggestions: ["Mapear processos interdepartamentais e identificar pontos de atrito ou falha de comunica√ß√£o.","Promover reuni√µes, workshops ou projetos conjuntos entre setores para alinhar objetivos e melhorar a colabora√ß√£o.","Estabelecer metas compartilhadas entre departamentos.","Incentivar a lideran√ßa a dar o exemplo na colabora√ß√£o intersetorial."] },
  // √çndice 24 (Cat 5)
  { index: 24, text: "O ambiente de trabalho √© livre de qualquer forma de viol√™ncia f√≠sica, verbal ou psicol√≥gica.", risk: "Percep√ß√£o da exist√™ncia de alguma forma de viol√™ncia (f√≠sica, verbal ou psicol√≥gica) no ambiente de trabalho.", suggestions: ["URGENTE: Pol√≠tica de toler√¢ncia zero a qualquer forma de viol√™ncia, com investiga√ß√£o imediata e rigorosa.","Garantir a seguran√ßa f√≠sica das instala√ß√µes.","Promover treinamentos sobre preven√ß√£o e identifica√ß√£o de viol√™ncia no local de trabalho.","Oferecer apoio psicol√≥gico e jur√≠dico √†s v√≠timas.","Criar um ambiente onde reportar viol√™ncia seja seguro e encorajado."] },
   // √çndice 25 (Cat 1)
  { index: 25, text: "Meu desempenho e contribui√ß√µes s√£o avaliados de forma justa e transparente.", risk: "O processo de avalia√ß√£o de desempenho √© percebido como injusto ou pouco transparente.", suggestions: ["Revisar e comunicar claramente os crit√©rios e o processo de avalia√ß√£o de desempenho.", "Garantir que as avalia√ß√µes sejam baseadas em metas e comportamentos observ√°veis.", "Treinar os avaliadores para reduzir vieses e conduzir avalia√ß√µes justas.", "Implementar mecanismos de calibra√ß√£o e revis√£o das avalia√ß√µes.", "Oferecer espa√ßo para o colaborador dar feedback sobre o processo de avalia√ß√£o."] },
  // √çndice 26 (Cat 2)
  { index: 26, text: "A comunica√ß√£o entre os diferentes setores da empresa √© eficiente...", risk: "Falhas na comunica√ß√£o e colabora√ß√£o entre diferentes setores ou departamentos.", suggestions: ["Promover reuni√µes interdepartamentais regulares para alinhar objetivos e processos.","Criar projetos ou comit√™s multidisciplinares para resolver problemas comuns.","Implementar sistemas ou plataformas que facilitem o compartilhamento de informa√ß√µes entre √°reas.","Incentivar uma cultura de colabora√ß√£o e vis√£o sist√™mica na empresa."] },
  // √çndice 27 (Cat 3)
  { index: 27, text: "Raramente me sinto apreensivo ou com medo ao pensar sobre meu trabalho ou ao estar no ambiente laboral.", risk: "Sentimentos frequentes de apreens√£o ou medo relacionados ao trabalho.", suggestions: ["URGENTE: Investigar as causas desse medo/apreens√£o (pode indicar ass√©dio, ambiente inseguro, press√£o extrema, medo de demiss√£o).","Garantir um ambiente de trabalho seguro f√≠sica e psicologicamente.","Refor√ßar pol√≠ticas contra ass√©dio e viol√™ncia no trabalho.","Promover uma comunica√ß√£o transparente sobre mudan√ßas organizacionais ou avalia√ß√µes.","Disponibilizar canais confidenciais para relatar preocupa√ß√µes ou situa√ß√µes de risco."] },
  // √çndice 28 (Cat 4)
  { index: 28, text: "Os gestores demonstram interesse genu√≠no pelo bem-estar dos funcion√°rios.", risk: "Percep√ß√£o de que os gestores n√£o se importam genuinamente com o bem-estar da equipe.", suggestions: ["Sensibilizar e capacitar gestores sobre a import√¢ncia do bem-estar e da sa√∫de mental no trabalho.","Incentivar gestores a praticar a escuta ativa e a perguntar sobre o bem-estar dos colaboradores.","Incluir indicadores de bem-estar da equipe na avalia√ß√£o de desempenho dos gestores (se aplic√°vel).","Comunicar as a√ß√µes da empresa voltadas ao bem-estar e o papel do gestor nelas."] },
  // √çndice 29 (Cat 5)
  { index: 29, text: "As diferen√ßas individuais s√£o respeitadas, sem qualquer tipo de discrimina√ß√£o por caracter√≠sticas pessoais, g√™nero, ra√ßa ou idade.", risk: "Percep√ß√£o de desrespeito √†s diferen√ßas individuais ou ocorr√™ncia de discrimina√ß√£o.", suggestions: ["Implementar e refor√ßar pol√≠ticas robustas de diversidade, equidade e inclus√£o (DE&I).","Realizar treinamentos sobre vieses inconscientes, respeito √† diversidade e antidiscrimina√ß√£o.","Garantir que os processos de RH (recrutamento, promo√ß√£o, avalia√ß√£o) sejam livres de discrimina√ß√£o.","Criar comit√™s de DE&I e canais seguros para den√∫ncias de discrimina√ß√£o.","Promover uma cultura que celebre e valorize as diferen√ßas individuais."] }
];
// =============================================================================
// =                         FIM DO MAPEAMENTO                                 =
// =============================================================================


// =============================================================================
// =                           FUN√á√ÉO doGet (Web App)                          =
// =============================================================================

function doGet() {
  var template = HtmlService.createTemplateFromFile('index');
  return template.evaluate()
      .setTitle('Elaborador - Avalia√ß√£o psicossocial')
      .addMetaTag('viewport', 'width=device-width, initial-scale=1.0, minimum-scale=1.0')
      .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL)
      .setSandboxMode(HtmlService.SandboxMode.IFRAME);
}

// =============================================================================
// =      FUN√á√ÉO PRINCIPAL - CHAMADA PELO HTML PARA CRIAR RECURSOS           =
// =============================================================================

function createAndSetupResources(companyName, targetRespondents, managerEmail) {
  // --- Valida√ß√£o Inicial ---
  if (!companyName || !targetRespondents || !managerEmail || !validateEmail(managerEmail) || parseInt(targetRespondents) < 1) {
       throw new Error("Dados inv√°lidos fornecidos. Verifique nome da empresa, n√∫mero de respostas (>0) e e-mail do gestor.");
  }
  targetRespondents = parseInt(targetRespondents);

  // --- Valida√ß√£o dos IDs dos Templates ---
   if (!FORM_TEMPLATE_ID || FORM_TEMPLATE_ID.includes("ID_DO_SEU") ||
      !DASHBOARD_TEMPLATE_ID || DASHBOARD_TEMPLATE_ID.includes("ID_DA_SUA") ||
      !REPORT_TEMPLATE_ID || REPORT_TEMPLATE_ID.includes("ID_DA_SUA")) {
       throw new Error("IDs dos arquivos Modelo (Formul√°rio, Dashboard, Relat√≥rio) n√£o foram configurados corretamente no script Code.gs. Verifique as constantes no in√≠cio do arquivo.");
   }

  try {
    // --- 1. Copiar Formul√°rio Modelo ---
    let formTemplateFile;
    try {
        formTemplateFile = DriveApp.getFileById(FORM_TEMPLATE_ID);
    } catch (e) {
        throw new Error(`Falha ao acessar o Formul√°rio Modelo (ID: ${FORM_TEMPLATE_ID}). Verifique o ID e se o arquivo existe. Erro: ${e.message}`);
    }
    const formFileName = `Formul√°rio Psicossocial - ${companyName}`;
    const copiedFormFile = formTemplateFile.makeCopy(formFileName);
    const formId = copiedFormFile.getId();
    const copiedForm = FormApp.openById(formId);
    const formUrl = copiedForm.getPublishedUrl(); // URL Longa Original
    Logger.log(`Formul√°rio copiado: ${formUrl} (ID: ${formId})`);

    // --- 2. Criar Planilha de Respostas (Privada) ---
    const responseSheetName = `Respostas (PRIVADO) - ${companyName} - ${Utilities.getUuid()}`;
    const responseSheet = SpreadsheetApp.create(responseSheetName);
    const responseSheetId = responseSheet.getId();
    Logger.log(`Planilha de Respostas (privada) criada: ID ${responseSheetId}`);

    // --- 3. Vincular C√≥pia do Form √† Planilha de Respostas ---
    copiedForm.setDestination(FormApp.DestinationType.SPREADSHEET, responseSheetId);
    Logger.log(`Formul√°rio ${formId} vinculado √† Planilha de Respostas ${responseSheetId}`);

    // --- 4. Copiar Dashboard Modelo ---
     let dashboardTemplateFile;
     try {
        dashboardTemplateFile = DriveApp.getFileById(DASHBOARD_TEMPLATE_ID);
     } catch (e) {
        throw new Error(`Falha ao acessar a Planilha Modelo do Dashboard (ID: ${DASHBOARD_TEMPLATE_ID}). Verifique o ID e se o arquivo existe. Erro: ${e.message}`);
     }
    const dashboardFileName = `Dashboard Psicossocial - ${companyName}`;
    const copiedDashboardFile = dashboardTemplateFile.makeCopy(dashboardFileName);
    const dashboardId = copiedDashboardFile.getId();
    const dashboardUrl = copiedDashboardFile.getUrl(); // URL Longa Original
    Logger.log(`Dashboard copiado: ${dashboardUrl} (ID: ${dashboardId})`);

    // --- 5. Compartilhar Dashboard com Gestor (APENAS VISUALIZADOR) ---
    try {
       copiedDashboardFile.addViewer(managerEmail);
       Logger.log(`Dashboard ${dashboardId} compartilhado com ${managerEmail} como VISUALIZADOR.`);
    } catch (e) { /* ... log de aviso ... */ Logger.log(`AVISO: Falha ao compartilhar dashboard com ${managerEmail}. Erro: ${e}`);}

    // --- 6. Encurtar AMBAS as URLs ---
    const shortFormUrl = shortenUrl(formUrl); // Encurta URL do Formul√°rio
    const shortDashboardUrl = shortenUrl(dashboardUrl); // Encurta URL do Dashboard
    Logger.log(`URLs encurtadas: Form=${shortFormUrl}, Dashboard=${shortDashboardUrl}`);

    // --- 7. Atualizar Configura√ß√£o N√ÉO SENS√çVEL no Dashboard Copiado ---
    const dashboardSheet = SpreadsheetApp.openById(dashboardId);
    const configSheet = dashboardSheet.getSheetByName("Configura√ß√£o");
    if (configSheet) {
        updateConfigValue(configSheet, "ManagerEmail", managerEmail);
        updateConfigValue(configSheet, "TargetRespondents", targetRespondents);
        updateConfigValue(configSheet, "FormId", formId);
        updateConfigValue(configSheet, "CompanyName", companyName);
        updateConfigValue(configSheet, "FormUrl", shortFormUrl); // Salva URL CURTA aqui
        updateConfigValue(configSheet, "DataCriacao", new Date());
        updateConfigValue(configSheet, "StatusRelatorio", "Aguardando Respostas");
         Logger.log("Configura√ß√£o N√ÉO SENS√çVEL do Dashboard atualizada.");
        // Atualiza status inicial na aba vis√≠vel
        try {
            const visibleSheet = dashboardSheet.getSheets().find(s => !s.isSheetHidden());
            if(visibleSheet) { visibleSheet.getRange("A1").setValue(`Status: 0 de ${targetRespondents} respostas recebidas.`); } // AJUSTE A C√âLULA AQUI
        } catch(e) { Logger.log("Falha ao atualizar status inicial na aba vis√≠vel."); }
    } else { /* ... log de aviso ... */ Logger.log("AVISO: Aba 'Configura√ß√£o' n√£o encontrada no template do dashboard."); }

    // --- 8. Salvar Dados Operacionais e Sens√≠veis nas Propriedades do Script ---
    const scriptProps = PropertiesService.getScriptProperties();
    const baseKey = formId;
    scriptProps.setProperty(baseKey + '_responseSheetId', responseSheetId);
    scriptProps.setProperty(baseKey + '_dashboardId', dashboardId);
    scriptProps.setProperty(baseKey + '_managerEmail', managerEmail);
    scriptProps.setProperty(baseKey + '_targetRespondents', targetRespondents.toString());
    scriptProps.setProperty(baseKey + '_companyName', companyName);
    scriptProps.setProperty(baseKey + '_reportGenerated', 'false');
    Logger.log(`Dados operacionais para form ${formId} salvos nas Propriedades do Script.`);

    // --- 9. Instalar o Gatilho onFormSubmit na C√ìPIA do Formul√°rio ---
    const triggers = ScriptApp.getUserTriggers(copiedForm);
    triggers.forEach(trigger => { /* ... remove triggers antigos ... */
       if (trigger.getEventType() === ScriptApp.EventType.ON_FORM_SUBMIT &&
           trigger.getHandlerFunction() === 'processSubmissionTrigger') {
         Logger.log(`Deletando gatilho ${trigger.getUniqueId()} existente para ${formId}.`);
         ScriptApp.deleteTrigger(trigger);
       }
    });
    ScriptApp.newTrigger('processSubmissionTrigger')
        .forForm(copiedForm)
        .onFormSubmit()
        .create();
    Logger.log(`Gatilho 'processSubmissionTrigger' instalado para o formul√°rio ${formId}`);

    // --- 10. Enviar E-mail Inicial com URLs CURTAS ---
    sendInitialEmailToManager(managerEmail, companyName, shortFormUrl, shortDashboardUrl);

    // --- 11. Retornar URLs CURTAS para o HTML ---
    return {
        formUrl: shortFormUrl, // Encurtada
        sheetUrl: shortDashboardUrl // Encurtada
     };

  } catch (error) { /* ... tratamento de erro ... */
     Logger.log(`ERRO FATAL em createAndSetupResources para ${companyName} / ${managerEmail}: ${error.message}\nStack: ${error.stack}`);
     let friendlyMessage = `Falha na cria√ß√£o dos recursos: ${error.message}`;
     // ... (mensagens amig√°veis opcionais) ...
     throw new Error(friendlyMessage);
   }
}

// =============================================================================
// =         FUN√á√ÉO DO GATILHO - PROCESSA SUBMISS√ÉO DE FORMUL√ÅRIO            =
// =============================================================================
/**
 * Fun√ß√£o acionada automaticamente pelo gatilho onFormSubmit.
 * Verifica a contagem de respostas e gera/envia o relat√≥rio se a meta for atingida.
 * @param {Object} e O objeto de evento do gatilho onFormSubmit.
 */
function processSubmissionTrigger(e) {
  const form = e.source; // O formul√°rio que disparou o gatilho
  const formId = form.getId();

  // Trava para evitar execu√ß√µes concorrentes do mesmo gatilho
  const lock = LockService.getScriptLock();
  if (!lock.tryLock(30000)) { // Tenta obter bloqueio por 30s
      Logger.log(`N√£o foi poss√≠vel obter bloqueio para ${formId}. Outra execu√ß√£o pode estar em andamento.`);
      return; // Sai se n√£o conseguir o bloqueio
  }
   Logger.log(`Bloqueio obtido para Form ID: ${formId}`);

  try {
    Logger.log(`Gatilho onFormSubmit disparado para Form ID: ${formId}`);

    // --- Recuperar Configura√ß√µes das Propriedades do Script ---
    const scriptProps = PropertiesService.getScriptProperties();
    const baseKey = formId;

    const responseSheetId = scriptProps.getProperty(baseKey + '_responseSheetId');
    const dashboardId = scriptProps.getProperty(baseKey + '_dashboardId');
    const managerEmail = scriptProps.getProperty(baseKey + '_managerEmail');
    const targetStr = scriptProps.getProperty(baseKey + '_targetRespondents');
    const companyName = scriptProps.getProperty(baseKey + '_companyName');
    let reportGeneratedFlag = scriptProps.getProperty(baseKey + '_reportGenerated');

    // --- Valida√ß√£o Cr√≠tica das Propriedades ---
    if (!responseSheetId || !dashboardId || !managerEmail || !targetStr) {
      Logger.log(`ERRO CR√çTICO: N√£o foi poss√≠vel recuperar configura√ß√µes essenciais para o formId ${formId} das Propriedades. Abortando trigger.`);
      return; // N√£o pode continuar
    }
    const targetRespondents = parseInt(targetStr);

    Logger.log(`Trigger: Config recuperada das Props para ${formId}: Target=${targetRespondents}, Email=${managerEmail}, ResponseSheetId=${responseSheetId}, DashboardId=${dashboardId}, Company=${companyName}, ReportGenerated=${reportGeneratedFlag}`);

    // --- Verificar se o relat√≥rio J√Å foi gerado ou est√° em processamento ---
    if (reportGeneratedFlag === 'true') {
      Logger.log(`Relat√≥rio para ${formId} J√Å FOI GERADO anteriormente. Trigger ignorado.`);
      return;
    }
    if (reportGeneratedFlag === 'processing') {
         Logger.log(`Relat√≥rio para ${formId} J√Å EST√Å EM PROCESSAMENTO por outra execu√ß√£o do trigger. Ignorando este disparo.`);
         return;
    }

    // --- Contar Respostas Atuais ---
    let currentResponses = 0;
    let responseSheet; // Define fora do try/catch
    let data = []; // Define fora do try/catch, inicializa como vazio
    try {
        responseSheet = SpreadsheetApp.openById(responseSheetId).getSheets()[0];
        currentResponses = responseSheet.getLastRow() - 1;
        if (currentResponses < 0) currentResponses = 0;
        Logger.log(`Trigger: Contagem de respostas para ${formId}: ${currentResponses} de ${targetRespondents}`);
        // L√™ os dados aqui para usar depois, APENAS se houver respostas
        if (currentResponses > 0) {
             // Tenta pegar dados at√© a √∫ltima coluna poss√≠vel (ex: coluna 33 para 30 perguntas + TS + Email + Nome)
             const lastDataColumn = questionColumnStartIndex + 30; // √çndice da √∫ltima coluna de dados + 1
             data = responseSheet.getRange(2, 1, currentResponses, lastDataColumn).getValues();
             Logger.log(`Lidos ${data.length} registros com ${lastDataColumn} colunas da planilha ${responseSheetId}`);
        }
    } catch (err) {
        Logger.log(`ERRO ao acessar planilha de respostas ${responseSheetId} para contagem ou leitura de dados: ${err}. Tentando novamente mais tarde.`);
        return; // N√£o pode continuar sem acesso √† planilha ou dados
    }

    // --- Atualizar Status no Dashboard ---
    updateDashboardStatus(dashboardId, `Aguardando Respostas (${currentResponses}/${targetRespondents})`);

    // --- Verificar se Atingiu o Alvo ---
    if (currentResponses >= targetRespondents) {
      Logger.log(`META ATINGIDA para ${formId}! Iniciando gera√ß√£o do relat√≥rio.`);

      // Marcar que a gera√ß√£o COME√áOU
      scriptProps.setProperty(baseKey + '_reportGenerated', 'processing');
      updateDashboardStatus(dashboardId, `Processando Relat√≥rio (${currentResponses}/${targetRespondents})...`);

      // --- Calcular Resultados (Categorias e Itens) ---
      let results; // Resultados das Categorias
      let itemAverages; // Resultados por Item
      let page2Content = ""; // Conte√∫do P√°gina 2
      try {
          if(data.length === 0) {
              throw new Error("Contagem de respostas indica meta atingida, mas n√£o foi poss√≠vel ler os dados.");
          }
          results = calculateResults(data);          // Calcula m√©dias das categorias e geral
          if(Object.keys(results).length === 0) {
              throw new Error("Fun√ß√£o calculateResults retornou objeto vazio.");
          }
          itemAverages = calculateItemAverages(data); // Calcula m√©dias dos itens
           if(Object.keys(itemAverages).length === 0 && currentResponses > 0) { // S√≥ √© erro se havia respostas
              throw new Error("Fun√ß√£o calculateItemAverages retornou objeto vazio, mesmo com respostas presentes.");
          }
          page2Content = generatePage2Content(itemAverages); // Gera conte√∫do da p√°g 2
          Logger.log(`Resultados e conte√∫do da p√°gina 2 calculados para ${formId}.`);
      } catch (err) {
           Logger.log(`ERRO no c√°lculo dos resultados para ${formId}: ${err}`);
           scriptProps.setProperty(baseKey + '_reportGenerated', 'error_calculation');
           updateDashboardStatus(dashboardId, `ERRO no c√°lculo dos resultados.`);
           return; // Para execu√ß√£o
      }

      // --- Gerar PDF a partir do Template ---
      let pdfBlob;
      try {
          // Passa o conte√∫do da p√°gina 2 para a fun√ß√£o de gera√ß√£o
          pdfBlob = generatePdfReportFromTemplate(companyName, currentResponses, results, page2Content); // Passa page2Content
          if (!pdfBlob || !pdfBlob.getBytes || pdfBlob.getBytes().length === 0) { // Verifica se o PDF n√£o est√° vazio
               throw new Error("Fun√ß√£o generatePdfReportFromTemplate n√£o retornou um Blob PDF v√°lido ou retornou um PDF vazio.");
          }
          Logger.log(`PDF gerado com sucesso para ${formId}: ${pdfBlob.getName()}, Tamanho: ${pdfBlob.getBytes().length} bytes`);
      } catch(err) {
           Logger.log(`ERRO na gera√ß√£o do PDF para ${formId}: ${err}`);
           scriptProps.setProperty(baseKey + '_reportGenerated', 'error_pdf');
           updateDashboardStatus(dashboardId, `ERRO na gera√ß√£o do PDF.`);
           return; // Para execu√ß√£o
      }

      // --- Enviar E-mail ---
      try {
          sendReportEmail(managerEmail, companyName, currentResponses, pdfBlob); // Envia email com anexo
          Logger.log(`E-mail com relat√≥rio enviado para ${managerEmail} (Form ${formId}).`);
          // MARCAR COMO GERADO COM SUCESSO
          scriptProps.setProperty(baseKey + '_reportGenerated', 'true');
          updateDashboardStatus(dashboardId, `Relat√≥rio Gerado e Enviado em ${Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "dd/MM/yyyy HH:mm")}`);
          // --- Limpeza Opcional ---
      } catch (err) {
          Logger.log(`ERRO no envio do e-mail para ${formId} ap√≥s gerar PDF: ${err}`);
          scriptProps.setProperty(baseKey + '_reportGenerated', 'error_email'); // Marca erro de envio
          updateDashboardStatus(dashboardId, `PDF gerado, mas ERRO no envio do e-mail.`);
          // N√£o retorna, PDF foi gerado mas envio falhou.
      }

    } else {
      Logger.log(`Meta ainda n√£o atingida para ${formId} (${currentResponses}/${targetRespondents}).`);
      // Apenas termina a execu√ß√£o normal do gatilho
    }

  } catch (error) {
    // Captura erros gerais n√£o tratados dentro do fluxo principal do gatilho
    Logger.log(`ERRO GERAL NO GATILHO processSubmissionTrigger (Form ID: ${form ? form.getId() : 'N/A'}): ${error.message}\nStack: ${error.stack}`);
    // Tentar notificar o admin/dev
     try {
       const scriptProps = PropertiesService.getScriptProperties();
       const baseKey = form ? form.getId() : 'UNKNOWN_FORM';
       const dashboardId = scriptProps.getProperty(baseKey + '_dashboardId');
       if(dashboardId) {
           updateDashboardStatus(dashboardId, `ERRO GERAL NO GATILHO. Verifique os Logs.`);
       }
     } catch (e) {} // Ignora erro ao tentar notificar no dashboard
  } finally {
    // Libera o bloqueio, n√£o importa o que aconte√ßa
    lock.releaseLock();
     Logger.log(`Bloqueio liberado para Form ID: ${formId}`);
  }
}


// =============================================================================
// =                          FUN√á√ïES AUXILIARES                             =
// =============================================================================

/**
 * Valida um endere√ßo de e-mail (formato b√°sico).
 */
function validateEmail(email) {
  if (!email || typeof email !== 'string') return false;
  const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return re.test(email.trim().toLowerCase());
}

//--------------------------------------

/**
 * Atualiza ou adiciona um par chave-valor na aba de configura√ß√£o especificada.
 */
function updateConfigValue(sheet, key, value) {
  if (!sheet || !key) return;
  try {
      const data = sheet.getRange("A1:A" + Math.max(sheet.getLastRow(), 1)).getValues();
      let found = false;
      for (let i = 0; i < data.length; i++) {
        if (data[i][0] === key) {
          sheet.getRange(i + 1, 2).setValue(value);
          found = true;
          // Logger.log(`Config Dashboard atualizada: ${key} = ${value}`);
          break;
        }
      }
      if (!found) {
        sheet.appendRow([key, value]);
         // Logger.log(`Config Dashboard adicionada: ${key} = ${value}`);
      }
  } catch (e) { Logger.log(`Erro ao tentar atualizar config "${key}" no dashboard ${sheet.getParent().getName()}: ${e}`); }
}

//--------------------------------------

/**
 * Calcula os resultados agregados por categoria E o escore geral.
 * @param {Array[]} data Array 2D com os dados das respostas (sem o cabe√ßalho).
 * @return {Object} Objeto com os resultados calculados por categoria e o escore geral.
 */
function calculateResults(data) {
  const categoryScoresSum = {};
  const categoryValidResponseCount = {};

  for (const category in categoryMapping) {
      categoryScoresSum[category] = 0;
      categoryValidResponseCount[category] = 0;
  }
  const numRespondents = data.length;
  if (numRespondents === 0) {
      Logger.log("calculateResults: Sem dados para calcular.");
      return {};
  }

  // Log da estrutura da primeira linha de dados
  if(data[0]) { Logger.log(`calculateResults: Amostra 1a linha dados (colunas: ${data[0].length}): ${JSON.stringify(data[0]).substring(0, 300)}`); }

  data.forEach((row, respondentIndex) => {
      for (const category in categoryMapping) {
          categoryMapping[category].forEach(qIndex => {
              const columnIndex = questionColumnStartIndex + qIndex; // Coluna 0-based
              if (columnIndex < row.length) { // Verifica se a coluna existe
                  const answer = row[columnIndex];
                  if (answer !== null && answer !== undefined && scoreMap.hasOwnProperty(answer)) {
                      categoryScoresSum[category] += scoreMap[answer];
                      categoryValidResponseCount[category]++;
                  } else {
                       // Log apenas se a resposta n√£o for vazia e n√£o estiver no mapa
                       if(answer !== "" && answer !== null && answer !== undefined) {
                           Logger.log(`calculateResults: Resposta inv√°lida ou n√£o mapeada na L:${respondentIndex + 2}, C:${columnIndex + 1} (Q:${qIndex+1}) -> '${answer}'`);
                       }
                  }
              } else {
                   Logger.log(`calculateResults: Aviso - Coluna ${columnIndex + 1} (Q:${qIndex+1}) n√£o encontrada na linha ${respondentIndex + 2}`);
              }
          });
      }
  });
   Logger.log("calculateResults: Somas por categoria:", categoryScoresSum);
   Logger.log("calculateResults: Contagem de respostas v√°lidas por categoria:", categoryValidResponseCount);

  const results = {};
  let overallScoreSum = 0;
  let categoryCountForOverall = 0;

  for (const category in categoryScoresSum) {
      let score0100 = 'N/A';
      let riskLevel = 'N/A';
      // O n√∫mero total de respostas v√°lidas poss√≠veis para a categoria √© numRespondents * numberOfQuestionsPerCategory
      const totalPossibleValidResponsesInCategory = numRespondents * numberOfQuestionsPerCategory;

      if (categoryValidResponseCount[category] > 0 && totalPossibleValidResponsesInCategory > 0) {
           // M√©dia bruta (0-4) por RESPOSTA V√ÅLIDA na categoria
          const averageRawScorePerValidResponse = categoryScoresSum[category] / categoryValidResponseCount[category];
          // Converte para 0-100 -> (M√©dia por Resposta / Score M√°ximo por Resposta) * 100
          score0100 = (averageRawScorePerValidResponse / maxScorePerQuestion) * 100;
          riskLevel = getRiskLevel(score0100);

          overallScoreSum += score0100;
          categoryCountForOverall++;
          results[category] = { score100: score0100.toFixed(1), level: riskLevel };
          Logger.log(`Cat [${category}]: Soma=${categoryScoresSum[category]}, N_Resp=${categoryValidResponseCount[category]}, MediaBruta=${averageRawScorePerValidResponse.toFixed(2)}, Score0-100=${results[category].score100}`);
      } else {
           results[category] = { score100: 'N/A', level: 'N/A' };
           Logger.log(`Aviso: Nenhuma resposta v√°lida encontrada para a categoria "${category}".`);
      }
  }

   if (categoryCountForOverall > 0) {
      const averageOverallScore = overallScoreSum / categoryCountForOverall;
      const overallRiskLevel = getRiskLevel(averageOverallScore);
      results["ESCORE GERAL DE RISCOS PSICOSSOCIAIS"] = { score100: averageOverallScore.toFixed(1), level: overallRiskLevel };
       Logger.log("Resultado Escore Geral:", results["ESCORE GERAL DE RISCOS PSICOSSOCIAIS"]);
  } else {
      results["ESCORE GERAL DE RISCOS PSICOSSOCIAIS"] = { score100: 'N/A', level: 'N/A' };
      Logger.log("Aviso: N√£o foi poss√≠vel calcular o Escore Geral.");
  }

  Logger.log("Resultados calculados por categoria (Final):", results);
  return results;
}

//--------------------------------------

/**
 * Calcula a m√©dia bruta (0-4) para cada item do question√°rio.
 */
function calculateItemAverages(data) {
    if (!data || data.length === 0) { Logger.log("calculateItemAverages: N√£o h√° dados."); return {}; }
    const numQuestions = 30;
    const itemAverages = {};
    const itemScoresSum = Array(numQuestions).fill(0);
    const itemValidResponsesCount = Array(numQuestions).fill(0);

    data.forEach(row => {
        for (let qIndex = 0; qIndex < numQuestions; qIndex++) {
            const columnIndex = questionColumnStartIndex + qIndex;
            if (columnIndex < row.length) {
                const answer = row[columnIndex];
                if (answer !== null && answer !== undefined && scoreMap.hasOwnProperty(answer)) {
                    itemScoresSum[qIndex] += scoreMap[answer];
                    itemValidResponsesCount[qIndex]++;
                }
            }
        }
    });

    for (let qIndex = 0; qIndex < numQuestions; qIndex++) {
        if (itemValidResponsesCount[qIndex] > 0) {
            itemAverages[qIndex] = itemScoresSum[qIndex] / itemValidResponsesCount[qIndex];
        } else {
            itemAverages[qIndex] = null;
        }
    }
    Logger.log("M√©dias por item (0-4) calculadas:", itemAverages);
    return itemAverages;
}

//--------------------------------------

/**
 * Gera o conte√∫do textual para a segunda p√°gina do relat√≥rio.
 * @param {Object} itemAverages Objeto com as m√©dias de cada item (chave = √≠ndice 0-29, valor = m√©dia 0-4 ou null).
 * @return {string} O conte√∫do formatado para a p√°gina 2 (texto simples com \n).
 */
function generatePage2Content(itemAverages) {
    const riskThreshold = 2.0;
    let content = "";
    let foundProblematicItems = false;

    // T√≠tulo e Introdu√ß√£o
    content += "Riscos Psicossociais Identificados e Sugest√µes de Manejo\n\n";
    content += "Abaixo s√£o listados os riscos psicossociais identificados na sua empresa (itens com m√©dia > 2.0 em escala de 0-4, onde 4 representa maior discord√¢ncia/risco) e sugest√µes de solu√ß√µes para os mesmos, indicando √°reas que merecem aten√ß√£o priorit√°ria para a promo√ß√£o de um ambiente de trabalho psicossocialmente mais seguro e saud√°vel.\n\n";
    content += "---\n\n"; // Separador

    // Itera pelo mapeamento `questionsDetails`
    for (let i = 0; i < questionsDetails.length; i++) {
        const itemData = questionsDetails[i];
        const avgScore = (itemAverages && typeof itemAverages[itemData.index] === 'number') ? itemAverages[itemData.index] : null;

        if (avgScore !== null && avgScore > riskThreshold) {
            foundProblematicItems = true;
            // Adiciona Risco Identificado (SEM a m√©dia agora)
            content += `Risco Identificado (Ref. Item ${itemData.index + 1}):\n`;
            content += `${itemData.risk}\n\n`;
            // Adiciona Sugest√µes (T√≠tulo limpo)
            content += "Sugest√µes:\n";
            if (Array.isArray(itemData.suggestions)) {
                itemData.suggestions.forEach(suggestion => { content += `- ${suggestion}\n`; });
            } else { content += "- Nenhuma sugest√£o espec√≠fica dispon√≠vel.\n"; }
            content += "\n---\n\n"; // Separador
        }
    }

    if (!foundProblematicItems) {
        content += "Nenhum item espec√≠fico apresentou m√©dia de risco elevada (acima de 2.0) nesta avalia√ß√£o.\n\nRecomenda-se continuar monitorando os indicadores gerais e manter as boas pr√°ticas identificadas na an√°lise das categorias.\n";
    }

    Logger.log(`Conte√∫do da P√°gina 2 gerado (${foundProblematicItems ? 'com' : 'sem'} itens problem√°ticos).`);
    return content.trim();
}


//--------------------------------------

/**
 * Determina o n√≠vel de risco textual com base no score 0-100.
 */
function getRiskLevel(score) {
  score = Math.max(0, Math.min(100, parseFloat(score) || 0));
  if (score <= 20) return "Baix√≠ssimo";
  if (score <= 40) return "Baixo";
  if (score <= 60) return "M√©dio";
  if (score <= 80) return "Alto";
  return "Alt√≠ssimo";
}

//--------------------------------------

/**
 * Gera o relat√≥rio em PDF copiando um template de PLANILHA, escrevendo valores
 * num√©ricos para os gr√°ficos e substituindo placeholders de texto.
 * Inclui configura√ß√£o de PDF (A4, Paisagem, Ajustar √† Largura, Margens Estreitas).
 */
function generatePdfReportFromTemplate(companyName, responseCount, results, page2Content) {
    // Valida√ß√£o do ID do Template
    if (!REPORT_TEMPLATE_ID || REPORT_TEMPLATE_ID.includes("ID_DA_SUA")) { throw new Error("ID do Template de Relat√≥rio (Planilha) n√£o configurado."); }
    let templateFile;
    try {
        templateFile = DriveApp.getFileById(REPORT_TEMPLATE_ID);
        if (templateFile.getMimeType() !== MimeType.GOOGLE_SHEETS) { throw new Error(`O template (ID: ${REPORT_TEMPLATE_ID}) n√£o √© uma Planilha Google.`); }
    } catch (e) { throw new Error(`N√£o foi poss√≠vel encontrar ou validar o Template de Relat√≥rio (ID: ${REPORT_TEMPLATE_ID}). ${e.message}`); }

    // Copiar e Nomear
    const reportFileName = `Relat√≥rio Psicossocial - ${companyName || "Empresa"} - ${Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "yyyy-MM-dd")}`;
    const copiedReportFile = templateFile.makeCopy(reportFileName);
    const copiedReportId = copiedReportFile.getId();
    Utilities.sleep(2000); // Delay ap√≥s c√≥pia
    Logger.log(`Template de Relat√≥rio (Planilha) copiado para ID: ${copiedReportId}`);

    let ss; // Define fora para usar no finally do try principal
    try {
        ss = SpreadsheetApp.openById(copiedReportId);
        SpreadsheetApp.flush();

        // --- 1. Escrever VALORES NUM√âRICOS para os Gr√°ficos ---
        const sheetGraficos = ss.getSheets()[0]; // Assume gr√°ficos na primeira aba - AJUSTE SE NECESS√ÅRIO
        if(!sheetGraficos) throw new Error("N√£o foi poss√≠vel encontrar a aba principal no template de relat√≥rio.");

        // !! AJUSTE AS C√âLULAS DE DESTINO ('C5', 'C15', ...) PARA CORRESPONDER AO SEU TEMPLATE !!
        const scoreCellMapping = {
            "RECOMPENSAS E DESENVOLVIMENTO": "C5",
            "AMBIENTE DE TRABALHO E COMUNICA√á√ÉO": "C15",
            "ORGANIZA√á√ÉO E DEMANDAS DO TRABALHO": "C25",
            "LIDERAN√áA E GEST√ÉO": "C35",
            "RELA√á√ïES INTERPESSOAIS E APOIO SOCIAL": "C45",
            "ESCORE GERAL DE RISCOS PSICOSSOCIAIS": "I5"
        };

        for (const key in scoreCellMapping) {
            if (results.hasOwnProperty(key)) {
                const cellRef = scoreCellMapping[key];
                const score = results[key]?.score100;
                if (score !== null && score !== undefined && score !== 'N/A') {
                    try { sheetGraficos.getRange(cellRef).setValue(parseFloat(score)); }
                    catch (cellErr) { Logger.log(`Erro ao escrever score ${score} na c√©lula ${cellRef} para ${key}: ${cellErr}`); }
                } else {
                    try { sheetGraficos.getRange(cellRef).setValue(0); } // Ou clearContent()
                    catch (cellErr) { Logger.log(`Erro ao limpar/zerar c√©lula ${cellRef} para ${key} (N/A): ${cellErr}`); }
                }
            } else { Logger.log(`Chave de resultado "${key}" n√£o encontrada no objeto results.`); }
        }
        Logger.log(`Valores num√©ricos dos scores escritos nas c√©lulas de destino.`);

        // --- 2. Substituir Placeholders de TEXTO ---
        ss.getSheets().forEach(sheet => {
             const replaceInSheet = (placeholder, value) => {
                 if(value !== null && value !== undefined){
                    try{ sheet.createTextFinder(placeholder).replaceAllWith(value.toString()); }
                    catch (replaceErr) { Logger.log(`Erro ao tentar substituir placeholder "${placeholder}" na aba "${sheet.getName()}": ${replaceErr}`); }
                 }
             };
             // Gerais
             replaceInSheet('{{COMPANY_NAME}}', companyName || '(Empresa n√£o informada)');
             replaceInSheet('{{RESPONSE_COUNT}}', responseCount.toString());
             replaceInSheet('{{GENERATION_DATE}}', Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "dd/MM/yyyy HH:mm"));
             // N√≠veis Textuais (se houver placeholders para eles)
             for (const key in results) {
                 const safeKey = key.replace(/[^a-zA-Z0-9_]/g, '_').toUpperCase();
                 const resultData = results[key] || { level: 'N/A' };
                 replaceInSheet(`{{${safeKey}_LEVEL}}`, resultData.level);
             }
             // P√°gina 2
             replaceInSheet('{{PONTOS_DE_ATENCAO}}', page2Content || 'Nenhum ponto de aten√ß√£o espec√≠fico identificado (m√©dia <= 2.0).');
        });

        SpreadsheetApp.flush(); // Aplica substitui√ß√µes
        Logger.log(`Placeholders de texto substitu√≠dos.`);
        Utilities.sleep(5000); // Delay maior AP√ìS o flush final (5 segundos) antes da exporta√ß√£o

        // --- 3. Gera√ß√£o do PDF com Configura√ß√µes Espec√≠ficas ---
        const spreadsheetId = copiedReportId;
        const exportUrlBase = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/export`;
        const params = {
            format: 'pdf', size: 'A4', portrait: 'false', scale: '2',
            top_margin: '0.75', bottom_margin: '0.75', left_margin: '0.25', right_margin: '0.25',
            gridlines: 'false', sheetnames: 'false', printtitle: 'false', exportformulas: 'false'
            // gid: 'GID_PAGINA1,GID_PAGINA2' // << AJUSTE AQUI se quiser exportar abas espec√≠ficas
        };
        const urlParams = Object.keys(params).map(key => `${key}=${encodeURIComponent(params[key])}`).join('&');
        const exportUrl = `${exportUrlBase}?${urlParams}`;
        Logger.log(`URL de exporta√ß√£o: ${exportUrl}`);

        let pdfBlob;
        try {
            const response = UrlFetchApp.fetch(exportUrl, {
                headers: { Authorization: 'Bearer ' + ScriptApp.getOAuthToken() },
                muteHttpExceptions: true,
                validateHttpsCertificates: false,
                deadline: 120 // 2 minutos de prazo
            });
            const responseCode = response.getResponseCode();
            Logger.log(`Exporta√ß√£o PDF - Status Code: ${responseCode}`);
            if (responseCode !== 200) {
                throw new Error(`Falha ao exportar PDF (${responseCode}): ${response.getContentText().substring(0, 500)}`);
            }
            pdfBlob = response.getBlob();
            if (!pdfBlob || pdfBlob.getBytes().length < 100) {
                 throw new Error(`PDF gerado parece vazio ou inv√°lido (Tamanho: ${pdfBlob ? pdfBlob.getBytes().length : 0} bytes)`);
            }
             pdfBlob.setName(reportFileName + ".pdf");
             Logger.log(`PDF Blob obtido: ${pdfBlob.getName()}, Tamanho: ${pdfBlob.getBytes().length}`);
        } catch (fetchErr) {
             Logger.log(`ERRO CR√çTICO durante fetch/valida√ß√£o do PDF: ${fetchErr}`);
             throw fetchErr;
        }

        // --- Limpeza ---
        copiedReportFile.setTrashed(true);
        Logger.log(`Arquivo intermedi√°rio ${copiedReportId} movido para lixeira.`);

        return pdfBlob; // Retorna o Blob PDF

    } catch(err) {
        Logger.log(`ERRO GERAL em generatePdfReportFromTemplate para ${copiedReportId}: ${err}`);
        // Tenta excluir a c√≥pia em caso de erro geral
        try { DriveApp.getFileById(copiedReportId).setTrashed(true); } catch (e) { Logger.log(`Erro ao excluir ${copiedReportId} ap√≥s falha GERAL: ${e}`); }
        throw new Error(`Erro ao gerar PDF da planilha ${REPORT_TEMPLATE_ID}: ${err.message}`);
    }
}


//--------------------------------------

/**
 * Envia o e-mail com o relat√≥rio PDF em anexo.
 */
function sendReportEmail(managerEmail, companyName, responseCount, pdfBlob) {
   //...(Fun√ß√£o inalterada)...
   const subject = `Relat√≥rio de Riscos Psicossociais - ${companyName || "Empresa"}`;
    const body = `Ol√°,\n\nO relat√≥rio de avalia√ß√£o de riscos psicossociais para a empresa ${companyName || "(n√£o definida)"} foi gerado automaticamente, com base em ${responseCount} respostas.\n\nO arquivo PDF segue em anexo.\n\nAtenciosamente,\nSistema de Avalia√ß√£o Psicossocial`;
    MailApp.sendEmail({
      to: managerEmail,
      subject: subject,
      body: body,
      attachments: [pdfBlob],
      name: "Sistema de Avalia√ß√£o Psicossocial"
    });
    Logger.log(`E-mail com relat√≥rio enviado para ${managerEmail}`);
}

//--------------------------------------

/**
 * Atualiza uma c√©lula de status no dashboard do gestor.
 */
function updateDashboardStatus(dashboardId, statusMessage) {
   //...(Fun√ß√£o inalterada, verificar c√©lula)...
   // !! AJUSTE A C√âLULA (Ex: "A1") CONFORME O LAYOUT DO SEU DASHBOARD !!
   try {
       const dashboard = SpreadsheetApp.openById(dashboardId);
       const sheet = dashboard.getSheets().find(s => !s.isSheetHidden()); // Primeira aba vis√≠vel
       if(sheet) {
           sheet.getRange("A1").setValue(statusMessage); // <<<<<<< AJUSTAR C√âLULA AQUI
            // Logger.log(`Status atualizado no Dashboard ${dashboardId}: ${statusMessage}`); // Log Opcional
       } else { Logger.log(`Nenhuma aba vis√≠vel encontrada no Dashboard ${dashboardId} para atualizar status.`); }
   } catch (err) { Logger.log(`Falha n√£o cr√≠tica ao tentar atualizar status "${statusMessage}" no dashboard ${dashboardId}: ${err}`); }
}

//--------------------------------------

/**
 * Encurta uma URL usando a API do TinyURL.
 */
function shortenUrl(longUrl) {
   //...(Fun√ß√£o inalterada)...
  const apiKeyBearer = PropertiesService.getScriptProperties().getProperty('TINYURL_API_KEY_BEARER');
  if (!apiKeyBearer) { Logger.log("Chave TinyURL n√£o configurada. Usando URL longa."); return longUrl; }
  let shortUrl = longUrl;
  const payload = { url: longUrl, domain: "tiny.one" };
  const options = { method: "post", contentType: "application/json", headers: { "Authorization": apiKeyBearer }, payload: JSON.stringify(payload), muteHttpExceptions: true };
  try {
    const response = UrlFetchApp.fetch(TINYURL_API_URL, options);
    const responseCode = response.getResponseCode();
    const resultText = response.getContentText();
    if (responseCode >= 200 && responseCode < 300) {
        const result = JSON.parse(resultText);
        if (result && result.data && result.data.tiny_url) { shortUrl = result.data.tiny_url; Logger.log(`URL encurtada: ${longUrl} -> ${shortUrl}`); }
        else { Logger.log(`TinyURL OK (${responseCode}), mas sem URL: ${resultText}. Usando URL longa.`); }
    } else { Logger.log(`Falha TinyURL (${responseCode}): ${resultText}. Usando URL longa.`); }
  } catch (e) { Logger.log(`Erro API TinyURL: ${e}. Usando URL longa.`); }
  return shortUrl;
}

//--------------------------------------

/**
 * Envia o e-mail inicial para o gestor com os links de acesso.
 */
function sendInitialEmailToManager(managerEmail, companyName, formLink, dashboardLink) {
    // ...(Fun√ß√£o inalterada)...
    const subject = `‚úÖ Sistema de Avalia√ß√£o Psicossocial Configurado - ${companyName}`;
    const htmlBody = `
    <div style="font-family: Arial, Helvetica, sans-serif; font-size: 11pt; line-height: 1.5;">
        <p>Ol√°!</p>
        <p>O sistema de avalia√ß√£o de riscos psicossociais para a empresa "<strong>${companyName}</strong>" foi configurado com sucesso.</p>
        <p><strong>Links importantes:</strong></p>
        <ol style="padding-left: 25px;">
            <li style="margin-bottom: 15px;"><strong>Link do Formul√°rio (Para Colaboradores):</strong><br><a href="${formLink}" target="_blank" style="color: #1a73e8; text-decoration: none;">${formLink}</a><br><em style="font-size: 0.9em; color: #5f6368;">Compartilhe este link com os colaboradores...</em></li>
            <li style="margin-bottom: 15px;"><strong>Link do seu Dashboard (Acesso do Gestor):</strong><br><a href="${dashboardLink}" target="_blank" style="color: #1a73e8; text-decoration: none;">${dashboardLink}</a><br><em style="font-size: 0.9em; color: #5f6368;">Use este link para consultar o status (acesso de <strong>Visualizador</strong>). O relat√≥rio ser√° enviado para ${managerEmail} quando a meta for atingida.</em></li>
        </ol>
        <p>Guarde este e-mail para refer√™ncia futura.</p>
        <p>Atenciosamente,<br><strong>Sistema de Avalia√ß√£o Psicossocial</strong></p>
    </div>`;
  try {
      MailApp.sendEmail({ to: managerEmail, subject: subject, htmlBody: htmlBody, name: "Sistema Psicossocial" });
      Logger.log(`E-mail inicial enviado para ${managerEmail}`);
  } catch (e) { Logger.log(`ERRO ao enviar e-mail inicial para ${managerEmail}: ${e}`); }
}

// =============================================================================
// =                     FUN√á√ÉO OPCIONAL DE SETUP DA API KEY                 =
// =============================================================================
/*
function setupTinyUrlApiKey() {
  // ... (Fun√ß√£o opcional para salvar a chave) ...
}
*/

// =============================================================================
// =                                 FIM DO SCRIPT                             =
// =============================================================================
