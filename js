// Fun√ß√£o que cria o formul√°rio usando o valor informado no HTML (companyName)
function createPsychosocialRiskForm(companyName, expectedResponses, reportEmail) {
  var formTitle = "Avalia√ß√£o de riscos psicossociais - " + companyName;
  var form = FormApp.create(formTitle);
  
  // Configura a coleta de e-mail e a limita√ß√£o de resposta por usu√°rio
  form.setCollectEmail(true);
  form.setLimitOneResponsePerUser(true);
  
  // Define a descri√ß√£o/instru√ß√µes gerais
  form.setDescription(
    "Instru√ß√µes:\n" +
    "Este question√°rio foi elaborado para identificar fatores no ambiente de trabalho que podem afetar seu bem-estar emocional e f√≠sico, conhecidos como riscos psicossociais. Esses riscos envolvem situa√ß√µes que podem gerar estresse, ansiedade, falta de apoio, comunica√ß√£o ineficiente, entre outros, impactando sua sa√∫de e qualidade de vida no trabalho.\n\n" +
    "Como responder:\n" +
    "Leia cada afirma√ß√£o com aten√ß√£o: s√£o quest√µes relacionadas a diferentes aspectos do trabalho, como remunera√ß√£o, ambiente f√≠sico, comunica√ß√£o, demandas, lideran√ßa e rela√ß√µes interpessoais.\n\n" +
    "Selecione a op√ß√£o que melhor reflete sua opini√£o ou experi√™ncia:\n" +
    "üòÉ Concordo totalmente: Voc√™ est√° 100% de acordo com a afirma√ß√£o.\n" +
    "üôÇ Concordo parcialmente: Voc√™ concorda, mas existem algumas ressalvas.\n" +
    "üòê N√£o concordo nem discordo: Voc√™ n√£o se posiciona nem a favor nem contra a afirma√ß√£o.\n" +
    "üòï Discordo parcialmente: Voc√™ discorda em parte da afirma√ß√£o.\n" +
    "‚òπÔ∏è Discordo totalmente: Voc√™ discorda completamente da afirma√ß√£o.\n\n" +
    "Responda com sinceridade: suas respostas jamais ser√£o identificadas a empresa que voc√™ trabalha sem solicitar sua autoriza√ß√£o. Esse formul√°rio foi feito pelo psic√≥logo Vinicius Vilela Limirio (CRP-04/65012), gestor de sa√∫de da MediQuo, que garante e se responsabiliza pelo sigilo da sua identifica√ß√£o.\n\n" +
    "Suas respostas s√£o importantes para identificar √°reas que precisam de melhorias e para promover um ambiente de trabalho mais saud√°vel e seguro para todos.\n" +
    "Obrigado por colaborar! ‚ò∫Ô∏è"
  );
  
  // Primeira p√°gina: pergunta do nome completo com valida√ß√£o
  var nameItem = form.addTextItem().setTitle("Qual seu nome completo?").setRequired(true);
  var nameValidation = FormApp.createTextValidation()
    .requireTextMatchesPattern("^[^0-9]+(?: [^0-9]+)+$")
    .setHelpText("Nome COMPLETO, por gentileza! Caso tenha colocado seu nome completo e esteja vendo esse erro, √© devido a ter n√∫meros na sua resposta.")
    .build();
  nameItem.setValidation(nameValidation);
  
  // Lista das 30 perguntas, cada uma em uma nova p√°gina
  var questions = [
    "Minha remunera√ß√£o √© justa e adequada √†s atividades que realizo.",
    "O ambiente de trabalho oferece condi√ß√µes adequadas de conforto, com boa temperatura, ilumina√ß√£o, n√≠vel de ru√≠do e mobili√°rio ergon√¥mico.",
    "Tenho autonomia para tomar decis√µes relacionadas ao meu trabalho.",
    "Recebo apoio adequado do meu gestor quando preciso resolver problemas relacionados ao trabalho.",
    "Os colegas se d√£o bem.",
    "Os benef√≠cios oferecidos pela empresa s√£o adequados e satisfat√≥rios.",
    "As instala√ß√µes e equipamentos s√£o modernos, garantindo seguran√ßa e baixo risco de acidentes no trabalho.",
    "Minha fun√ß√£o e responsabilidades s√£o claras e bem definidas, sem contradi√ß√µes ou ambiguidades.",
    "Meu gestor exerce sua lideran√ßa de forma respeitosa, sem utilizar sua posi√ß√£o para impor poder de forma autorit√°ria.",
    "Os colegas se ajudam.",
    "Existem oportunidades justas de crescimento e promo√ß√£o na empresa.",
    "Os funcion√°rios em geral demonstram satisfa√ß√£o em trabalhar na empresa.",
    "Minha carga de trabalho √© adequada, permitindo que eu realize minhas tarefas sem exaust√£o frequente.",
    "Meu trabalho n√£o √© controlado de forma excessiva ou desnecess√°ria pelo meu gestor.",
    "Sinto-me integrado √† equipe, sem ser tratado com indiferen√ßa ou isolamento no ambiente de trabalho.",
    "Sou reconhecido e recompensado quando fa√ßo um bom trabalho.",
    "A comunica√ß√£o no meu time funciona bem.",
    "As metas estabelecidas pela empresa s√£o realistas e poss√≠veis de serem alcan√ßadas com os recursos dispon√≠veis.",
    "No meu ambiente de trabalho n√£o ocorrem situa√ß√µes de ass√©dio por parte dos gestores.",
    "No ambiente de trabalho n√£o ocorrem situa√ß√µes de humilha√ß√£o, piadas ofensivas ou comportamentos vexat√≥rios entre colegas.",
    "S√£o oferecidos supervis√µes e treinamentos peri√≥dicos que me ajudam a desenvolver minhas habilidades profissionais.",
    "As informa√ß√µes importantes chegam r√°pido.",
    "Consigo realizar minhas tarefas sem sentimentos constantes de ansiedade ou tens√£o.",
    "Existe coopera√ß√£o e bom relacionamento entre os setores.",
    "O ambiente de trabalho √© livre de qualquer forma de viol√™ncia f√≠sica, verbal ou psicol√≥gica.",
    "Meu desempenho e contribui√ß√µes s√£o avaliados de forma justa e transparente.",
    "A comunica√ß√£o entre os diferentes setores da empresa √© eficiente, permitindo que eu obtenha as informa√ß√µes necess√°rias para realizar meu trabalho adequadamente.",
    "Raramente me sinto apreensivo ou com medo ao pensar sobre meu trabalho ou ao estar no ambiente laboral.",
    "Os gestores demonstram interesse genu√≠no pelo bem-estar dos funcion√°rios.",
    "As diferen√ßas individuais s√£o respeitadas, sem qualquer tipo de discrimina√ß√£o por caracter√≠sticas pessoais, g√™nero, ra√ßa ou idade."
  ];
  
  var choices = [
    "üòÉ Concordo totalmente",
    "üôÇ Concordo parcialmente",
    "üòê N√£o concordo nem discordo",
    "üòï Discordo parcialmente",
    "‚òπÔ∏è Discordo totalmente"
  ];
  
  for (var i = 0; i < questions.length; i++) {
    form.addPageBreakItem().setTitle("");
    form.addMultipleChoiceItem()
      .setTitle(questions[i])
      .setChoiceValues(choices)
      .setRequired(true);
  }
  
  // Cria uma pasta para armazenar as respostas e relat√≥rios para esta empresa
  var folder = DriveApp.createFolder("Riscos Psicossociais - " + companyName);
  
  // Cria uma planilha para armazenar as configura√ß√µes
  var configSheet = SpreadsheetApp.create("Config - " + companyName);
  DriveApp.getFileById(configSheet.getId()).moveTo(folder);
  
  var sheet = configSheet.getActiveSheet();
  sheet.appendRow(['formId', form.getId()]);
  sheet.appendRow(['companyName', companyName]);
  sheet.appendRow(['expectedResponses', expectedResponses]);
  sheet.appendRow(['reportEmail', reportEmail]);
  sheet.appendRow(['formUrl', form.getPublishedUrl()]);
  sheet.appendRow(['folder', folder.getId()]);
  sheet.appendRow(['createdAt', new Date().toISOString()]);
  
  // Conecta o formul√°rio a uma planilha para as respostas
  var responseSheet = SpreadsheetApp.create("Respostas - " + companyName);
  DriveApp.getFileById(responseSheet.getId()).moveTo(folder);
  form.setDestination(FormApp.DestinationType.SPREADSHEET, responseSheet.getId());
  
  // Adiciona a planilha de resposta na configura√ß√£o
  sheet.appendRow(['responseSheetId', responseSheet.getId()]);
  
  // Salva os IDs importantes como propriedades do script para f√°cil acesso
  var scriptProperties = PropertiesService.getScriptProperties();
  var companyKey = companyName.replace(/\s+/g, '_').toLowerCase();
  scriptProperties.setProperty(companyKey + '_config', configSheet.getId());
  scriptProperties.setProperty(companyKey + '_responses', responseSheet.getId());
  scriptProperties.setProperty(companyKey + '_form', form.getId());
  scriptProperties.setProperty(companyKey + '_folder', folder.getId());
  
  // Obt√©m a URL publicada do formul√°rio (link longo)
  var longUrl = form.getPublishedUrl();
  
  // Utiliza a API do TinyURL para encurtar o link
  var apiUrl = "https://api.tinyurl.com/create";
  var payload = {
    url: longUrl,
    domain: "tiny.one"
  };
  
  var options = {
    method: "post",
    contentType: "application/json",
    payload: JSON.stringify(payload),
    headers: {
      "Authorization": "Bearer t3X2VhjUXlxSyuoxEJPkfBL3B4RqRhozql7O1x66vgqTzi5VSOv8nhlnYJGL"
    },
    muteHttpExceptions: true
  };
  
  var response = UrlFetchApp.fetch(apiUrl, options);
  var result = JSON.parse(response.getContentText());
  var shortUrl;
  if (result && result.data && result.data.tiny_url) {
    shortUrl = result.data.tiny_url;
  } else {
    // Se ocorrer falha, retorna o link longo
    shortUrl = longUrl;
  }
  
  // Adiciona tamb√©m a URL curta √†s configura√ß√µes
  sheet.appendRow(['shortUrl', shortUrl]);
  
  // Cria um gatilho de tempo para verificar regularmente o n√∫mero de respostas
  ScriptApp.newTrigger('checkResponseCount')
    .timeBased()
    .everyHours(6)  // Verifica a cada 6 horas
    .create();
  
  return {
    formId: form.getId(),
    formUrl: longUrl,
    shortUrl: shortUrl,
    configId: configSheet.getId(),
    responseSheetId: responseSheet.getId(),
    folderId: folder.getId(),
    companyKey: companyKey
  };
}

// Fun√ß√£o para obter informa√ß√µes de configura√ß√£o de uma empresa
function getCompanyConfig(companyKey) {
  var scriptProperties = PropertiesService.getScriptProperties();
  var configId = scriptProperties.getProperty(companyKey + '_config');
  
  if (!configId) {
    return null;
  }
  
  var configSheet = SpreadsheetApp.openById(configId);
  var data = configSheet.getActiveSheet().getDataRange().getValues();
  
  var config = {};
  for (var i = 0; i < data.length; i++) {
    config[data[i][0]] = data[i][1];
  }
  
  return config;
}

// Fun√ß√£o para obter o status atual das respostas
function getResponseStatus(companyKey) {
  var config = getCompanyConfig(companyKey);
  
  if (!config) {
    return { error: "Empresa n√£o encontrada" };
  }
  
  var responseSheet = SpreadsheetApp.openById(config.responseSheetId);
  var responses = responseSheet.getActiveSheet().getDataRange().getValues();
  
  // A primeira linha √© o cabe√ßalho, ent√£o o n√∫mero real de respostas √© (rows - 1)
  var totalResponses = responses.length - 1;
  var expectedResponses = parseInt(config.expectedResponses);
  var canGenerateReport = totalResponses >= expectedResponses;
  
  // Prepara a lista de respondentes (nome e email)
  var respondents = [];
  if (totalResponses > 0) {
    // Assumindo que o nome est√° na coluna 2 (√≠ndice 1) e o email na coluna 3 (√≠ndice 2)
    // Ajuste conforme necess√°rio baseado no formato real das respostas
    for (var i = 1; i < responses.length; i++) {
      respondents.push({
        name: responses[i][1],  // Ajuste este √≠ndice
        email: responses[i][2]  // Ajuste este √≠ndice
      });
    }
  }
  
  return {
    companyName: config.companyName,
    totalResponses: totalResponses,
    expectedResponses: expectedResponses,
    canGenerateReport: canGenerateReport,
    respondents: respondents,
    formUrl: config.shortUrl || config.formUrl,
    progress: Math.round((totalResponses / expectedResponses) * 100)
  };
}

// Fun√ß√£o para verificar regularmente o n√∫mero de respostas e notificar quando estiver completo
function checkResponseCount() {
  var scriptProperties = PropertiesService.getScriptProperties();
  var allProperties = scriptProperties.getProperties();
  
  for (var key in allProperties) {
    if (key.endsWith('_config')) {
      var companyKey = key.replace('_config', '');
      var status = getResponseStatus(companyKey);
      
      // Se atingiu o n√∫mero esperado de respostas e n√£o notificou ainda
      if (status.canGenerateReport) {
        var config = getCompanyConfig(companyKey);
        
        // Verifica se j√° notificou (para n√£o enviar emails repetidos)
        if (!config.notifiedComplete) {
          var configSheet = SpreadsheetApp.openById(config.configId);
          configSheet.getActiveSheet().appendRow(['notifiedComplete', 'true']);
          
          // Envia email para o gestor
          MailApp.sendEmail({
            to: config.reportEmail,
            subject: "Avalia√ß√£o de Riscos Psicossociais - " + config.companyName + " (Completa)",
            body: "Ol√°,\n\n" +
                  "A avalia√ß√£o de riscos psicossociais para " + config.companyName + " est√° completa.\n\n" +
                  "Foram coletadas " + status.totalResponses + " respostas de " + status.expectedResponses + " esperadas.\n\n" +
                  "Voc√™ j√° pode gerar o relat√≥rio acessando o painel de controle.\n\n" +
                  "Atenciosamente,\n" +
                  "Sistema de Avalia√ß√£o de Riscos Psicossociais"
          });
        }
      }
    }
  }
}

// Fun√ß√£o para gerar e enviar o relat√≥rio
function generateAndSendReport(companyKey) {
  var config = getCompanyConfig(companyKey);
  var status = getResponseStatus(companyKey);
  
  if (!config) {
    return { error: "Empresa n√£o encontrada" };
  }
  
  if (!status.canGenerateReport) {
    return { 
      error: "N√∫mero insuficiente de respostas", 
      message: "√â necess√°rio ter pelo menos " + config.expectedResponses + " respostas para gerar o relat√≥rio."
    };
  }
  
  // Abre a planilha de respostas para an√°lise
  var responseSheet = SpreadsheetApp.openById(config.responseSheetId);
  var responses = responseSheet.getActiveSheet().getDataRange().getValues();
  
  // Prepara o relat√≥rio
  var report = generatePsychosocialRiskReport(config.companyName, responses);
  
  // Cria o arquivo PDF na pasta da empresa
  var folder = DriveApp.getFolderById(config.folder);
  var reportName = "Relat√≥rio de Riscos Psicossociais - " + config.companyName + ".pdf";
  var blob = report.getAs('application/pdf').setName(reportName);
  var file = folder.createFile(blob);
  
  // Envia o relat√≥rio por email
  MailApp.sendEmail({
    to: config.reportEmail,
    subject: "Relat√≥rio de Riscos Psicossociais - " + config.companyName,
    body: "Ol√°,\n\n" +
          "Segue em anexo o relat√≥rio de avalia√ß√£o de riscos psicossociais para " + config.companyName + ".\n\n" +
          "Este relat√≥rio foi gerado automaticamente com base nas respostas coletadas dos colaboradores.\n\n" +
          "Atenciosamente,\n" +
          "Sistema de Avalia√ß√£o de Riscos Psicossociais",
    attachments: [file.getAs(MimeType.PDF)]
  });
  
  // Atualiza a configura√ß√£o para indicar que o relat√≥rio foi gerado
  var configSheet = SpreadsheetApp.openById(config.configId);
  configSheet.getActiveSheet().appendRow(['reportGenerated', new Date().toISOString()]);
  
  return { 
    success: true, 
    message: "Relat√≥rio gerado e enviado com sucesso para " + config.reportEmail
  };
}

// Fun√ß√£o para gerar o relat√≥rio de avalia√ß√£o de riscos psicossociais
function generatePsychosocialRiskReport(companyName, responses) {
  // Cria um documento para o relat√≥rio
  var doc = DocumentApp.create("Relat√≥rio de Riscos Psicossociais - " + companyName);
  var body = doc.getBody();
  
  // Adiciona cabe√ßalho e t√≠tulo
  body.appendParagraph("Relat√≥rio de Avalia√ß√£o de Riscos Psicossociais")
      .setHeading(DocumentApp.ParagraphHeading.HEADING1)
      .setAlignment(DocumentApp.HorizontalAlignment.CENTER);
  
  body.appendParagraph("Empresa: " + companyName)
      .setHeading(DocumentApp.ParagraphHeading.HEADING2)
      .setAlignment(DocumentApp.HorizontalAlignment.CENTER);
  
  body.appendParagraph("Data: " + new Date().toLocaleDateString('pt-BR'))
      .setAlignment(DocumentApp.HorizontalAlignment.CENTER);
  
  body.appendParagraph("\n");
  
  // Adiciona introdu√ß√£o
  body.appendParagraph("1. Introdu√ß√£o")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  body.appendParagraph("Este relat√≥rio apresenta os resultados da avalia√ß√£o de riscos psicossociais realizada na empresa " + 
                     companyName + ". A avalia√ß√£o foi conduzida com o objetivo de identificar fatores no ambiente de trabalho " +
                     "que podem afetar o bem-estar emocional e f√≠sico dos colaboradores.");
  
  // Adiciona metodologia
  body.appendParagraph("2. Metodologia")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  body.appendParagraph("A avalia√ß√£o foi realizada por meio de um question√°rio online contendo 30 afirma√ß√µes relacionadas " +
                     "a diferentes aspectos do trabalho, como remunera√ß√£o, ambiente f√≠sico, comunica√ß√£o, demandas, lideran√ßa " +
                     "e rela√ß√µes interpessoais. Os colaboradores avaliaram cada afirma√ß√£o utilizando uma escala de concord√¢ncia " +
                     "de 5 pontos, variando de \"Concordo totalmente\" a \"Discordo totalmente\".");
  
  body.appendParagraph("Total de participantes: " + (responses.length - 1) + " colaboradores.");
  
  // Calcula as m√©dias para cada quest√£o
  var questionScores = calculateQuestionScores(responses);
  
  // Adiciona resultados gerais
  body.appendParagraph("3. Resultados Gerais")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  // Calcula pontua√ß√£o geral
  var overallScore = calculateOverallScore(questionScores);
  var overallRiskLevel = getRiskLevel(overallScore);
  
  body.appendParagraph("Pontua√ß√£o geral: " + overallScore.toFixed(2) + " / 5.00")
      .setAlignment(DocumentApp.HorizontalAlignment.CENTER)
      .setBold(true);
  
  body.appendParagraph("N√≠vel de risco psicossocial: " + overallRiskLevel)
      .setAlignment(DocumentApp.HorizontalAlignment.CENTER)
      .setBold(true);
  
  // Adiciona resultados por categoria
  body.appendParagraph("4. Resultados por Categoria")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  var categories = [
    {name: "Remunera√ß√£o e Benef√≠cios", questions: [0, 5, 10, 15]},
    {name: "Ambiente F√≠sico e Seguran√ßa", questions: [1, 6, 11]},
    {name: "Autonomia e Clareza de Fun√ß√£o", questions: [2, 7, 12, 17]},
    {name: "Lideran√ßa e Gest√£o", questions: [3, 8, 13, 18, 28]},
    {name: "Rela√ß√µes Interpessoais", questions: [4, 9, 14, 19, 23, 24, 29]},
    {name: "Desenvolvimento Profissional", questions: [20, 25]},
    {name: "Comunica√ß√£o", questions: [16, 21, 26]},
    {name: "Sa√∫de Mental e Bem-estar", questions: [22, 27]}
  ];
  
  var table = body.appendTable();
  var tr = table.appendTableRow();
  tr.appendTableCell("Categoria").setBold(true);
  tr.appendTableCell("Pontua√ß√£o").setBold(true);
  tr.appendTableCell("N√≠vel de Risco").setBold(true);
  
  for (var i = 0; i < categories.length; i++) {
    var score = calculateCategoryScore(questionScores, categories[i].questions);
    var riskLevel = getRiskLevel(score);
    
    tr = table.appendTableRow();
    tr.appendTableCell(categories[i].name);
    tr.appendTableCell(score.toFixed(2) + " / 5.00");
    tr.appendTableCell(riskLevel);
  }
  
  // Adiciona pontos fortes e √°reas de melhoria
  var strengths = getTopQuestions(questionScores, 5, true);
  var weaknesses = getTopQuestions(questionScores, 5, false);
  
  body.appendParagraph("5. Pontos Fortes")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  var list = body.appendListItem(getQuestionText(strengths[0].index) + " (Pontua√ß√£o: " + strengths[0].score.toFixed(2) + ")");
  for (var i = 1; i < strengths.length; i++) {
    list = body.appendListItem(getQuestionText(strengths[i].index) + " (Pontua√ß√£o: " + strengths[i].score.toFixed(2) + ")");
  }
  
  body.appendParagraph("6. √Åreas de Melhoria")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  list = body.appendListItem(getQuestionText(weaknesses[0].index) + " (Pontua√ß√£o: " + weaknesses[0].score.toFixed(2) + ")");
  for (var i = 1; i < weaknesses.length; i++) {
    list = body.appendListItem(getQuestionText(weaknesses[i].index) + " (Pontua√ß√£o: " + weaknesses[i].score.toFixed(2) + ")");
  }
  
  // Adiciona conclus√µes e recomenda√ß√µes
  body.appendParagraph("7. Conclus√µes e Recomenda√ß√µes")
      .setHeading(DocumentApp.ParagraphHeading.HEADING2);
  
  var recommendations = generateRecommendations(questionScores, categories);
  body.appendParagraph(recommendations);
  
  // Adiciona rodap√©
  body.appendParagraph("\n\n");
  body.appendParagraph("Relat√≥rio elaborado por:\nPsic√≥logo Vinicius Vilela Limirio (CRP-04/65012)\nGestor de Sa√∫de da MediQuo")
      .setItalic(true)
      .setAlignment(DocumentApp.HorizontalAlignment.CENTER);
  
  // Fecha o documento para edi√ß√£o
  doc.saveAndClose();
  
  return doc;
}

// Fun√ß√£o auxiliar para calcular pontua√ß√µes das quest√µes
function calculateQuestionScores(responses) {
  var scores = [];
  
  // Assumindo que as respostas come√ßam na quarta coluna (√≠ndice 3)
  // e que temos 30 quest√µes a partir da√≠
  for (var q = 0; q < 30; q++) {
    var totalScore = 0;
    var count = 0;
    
    for (var r = 1; r < responses.length; r++) {  // Come√ßa do 1 para pular o cabe√ßalho
      var response = responses[r][q + 3];  // Ajuste este √≠ndice conforme necess√°rio
      
      // Converte a resposta em pontua√ß√£o (de 1 a 5)
      var score = 0;
      if (response.includes("Concordo totalmente")) {
        score = 5;
      } else if (response.includes("Concordo parcialmente")) {
        score = 4;
      } else if (response.includes("N√£o concordo nem discordo")) {
        score = 3;
      } else if (response.includes("Discordo parcialmente")) {
        score = 2;
      } else if (response.includes("Discordo totalmente")) {
        score = 1;
      }
      
      if (score > 0) {
        totalScore += score;
        count++;
      }
    }
    
    var averageScore = count > 0 ? totalScore / count : 0;
    scores.push(averageScore);
  }
  
  return scores;
}

// Fun√ß√£o auxiliar para calcular pontua√ß√£o geral
function calculateOverallScore(questionScores) {
  var total = 0;
  for (var i = 0; i < questionScores.length; i++) {
    total += questionScores[i];
  }
  return total / questionScores.length;
}

// Fun√ß√£o auxiliar para calcular pontua√ß√£o de categoria
function calculateCategoryScore(questionScores, questionIndices) {
  var total = 0;
  for (var i = 0; i < questionIndices.length; i++) {
    total += questionScores[questionIndices[i]];
  }
  return total / questionIndices.length;
}

// Fun√ß√£o auxiliar para determinar o n√≠vel de risco
function getRiskLevel(score) {
  if (score >= 4.5) {
    return "Muito baixo";
  } else if (score >= 3.5) {
    return "Baixo";
  } else if (score >= 2.5) {
    return "Moderado";
  } else if (score >= 1.5) {
    return "Alto";
  } else {
    return "Muito alto";
  }
}

// Fun√ß√£o auxiliar para obter as quest√µes com maior/menor pontua√ß√£o
function getTopQuestions(questionScores, count, highest) {
  var questions = [];
  
  for (var i = 0; i < questionScores.length; i++) {
    questions.push({
      index: i,
      score: questionScores[i]
    });
  }
  
  questions.sort(function(a, b) {
    return highest ? b.score - a.score : a.score - b.score;
  });
  
  return questions.slice(0, count);
}

// Fun√ß√£o auxiliar para obter o texto da quest√£o pelo √≠ndice
function getQuestionText(index) {
  var questions = [
    "Minha remunera√ß√£o √© justa e adequada √†s atividades que realizo.",
    "O ambiente de trabalho oferece condi√ß√µes adequadas de conforto, com boa temperatura, ilumina√ß√£o, n√≠vel de ru√≠do e mobili√°rio ergon√¥mico.",
    "Tenho autonomia para tomar decis√µes relacionadas ao meu trabalho.",
    "Recebo apoio adequado do meu gestor quando preciso resolver problemas relacionados ao trabalho.",
    "Os colegas se d√£o bem.",
    "Os benef√≠cios oferecidos pela empresa s√£o adequados e satisfat√≥rios.",
    "As instala√ß√µes e equipamentos s√£o modernos, garantindo seguran√ßa e baixo risco de acidentes no trabalho.",
    "Minha fun√ß√£o e responsabilidades s√£o claras e bem definidas, sem contradi√ß√µes ou ambiguidades.",
    "Meu gestor exerce sua lideran√ßa de forma respeitosa, sem utilizar sua posi√ß√£o para impor poder de forma autorit√°ria.",
    "Os colegas se ajudam.",
    "Existem oportunidades justas de crescimento e promo√ß√£o na empresa.",
    "Os funcion√°rios em geral demonstram satisfa√ß√£o em trabalhar na empresa.",
    "Minha carga de trabalho √© adequada, permitindo que eu realize minhas tarefas sem exaust√£o frequente.",
    "Meu trabalho n√£o √© controlado de forma excessiva ou desnecess√°ria pelo meu gestor.",
    "Sinto-me integrado √† equipe, sem ser tratado com indiferen√ßa ou isolamento no ambiente de trabalho.",
    "Sou reconhecido e recompensado quando fa√ßo um bom trabalho.",
    "A comunica√ß√£o no meu time funciona bem.",
    "As metas estabelecidas pela empresa s√£o realistas e poss√≠veis de serem alcan√ßadas com os recursos dispon√≠veis.",
    "No meu ambiente de trabalho n√£o ocorrem situa√ß√µes de ass√©dio por parte dos gestores.",
    "No ambiente de trabalho n√£o ocorrem situa√ß√µes de humilha√ß√£o, piadas ofensivas ou comportamentos vexat√≥rios entre colegas.",
    "S√£o oferecidos supervis√µes e treinamentos peri√≥dicos que me ajudam a desenvolver minhas habilidades profissionais.",
    "As informa√ß√µes importantes chegam r√°pido.",
    "Consigo realizar minhas tarefas sem sentimentos constantes de ansiedade ou tens√£o.",
    "Existe coopera√ß√£o e bom relacionamento entre os setores.",
    "O ambiente de trabalho √© livre de qualquer forma de viol√™ncia f√≠sica, verbal ou psicol√≥gica.",
    "Meu desempenho e contribui√ß√µes s√£o avaliados de forma justa e transparente.",
    "A comunica√ß√£o entre os diferentes setores da empresa √© eficiente, permitindo que eu obtenha as informa√ß√µes necess√°rias para realizar meu trabalho adequadamente.",
    "Raramente me sinto apreensivo ou com medo ao pensar sobre meu trabalho ou ao estar no ambiente laboral.",
    "Os gestores demonstram interesse genu√≠no pelo bem-estar dos funcion√°rios.",
    "As diferen√ßas individuais s√£o respeitadas, sem qualquer tipo de discrimina√ß√£o por caracter√≠sticas pessoais, g√™nero, ra√ßa ou idade."
  ];
  
  return questions[index];
}

// Fun√ß√£o auxiliar para gerar recomenda√ß√µes com base nas pontua√ß√µes
function generateRecommendations(questionScores, categories) {
  var lowestCategoryIndex = -1;
  var lowestScore = 5.0;
  
  // Identifica a categoria com menor pontua√ß√£o
  for (var i = 0; i < categories.length; i++) {
    var score = calculateCategoryScore(questionScores, categories[i].questions);
    if (score < lowestScore) {
      lowestScore = score;
      lowestCategoryIndex = i;
    }
  }
  
  var text = "Com base na an√°lise das respostas dos colaboradores, foram identificadas algumas √°reas que merecem aten√ß√£o. ";
  
  // Recomenda√ß√µes gerais baseadas na pontua√ß√£o geral
  var overallScore = calculateOverallScore(questionScores);
  
  if (overallScore < 2.5) {
    text += "A pontua√ß√£o geral indica um n√≠vel de risco psicossocial alto, o que sugere a necessidade de a√ß√µes corretivas imediatas. ";
  } else if (overallScore < 3.5) {
    text += "A pontua√ß√£o geral indica um n√≠vel de risco psicossocial moderado, sugerindo a necessidade de a√ß√µes preventivas. ";
  } else {
    text += "A pontua√ß√£o geral indica um bom ambiente psicossocial, mas ainda h√° espa√ßo para melhorias. ";
  }
  
  // Recomenda√ß√µes espec√≠ficas para a categoria com menor pontua√ß√£o
  text += "\n\nA categoria '" + categories[lowestCategoryIndex].name + "' apresentou a menor pontua√ß√£o e requer aten√ß√£o especial. ";
  
  switch (categories[lowestCategoryIndex].name) {
    case "Remunera√ß√£o e Benef√≠cios":
      text += "Recomenda-se: \n" +
              "- Avaliar a pol√≠tica de remunera√ß√£o atual, comparando-a com o mercado;\n" +
              "- Considerar a implementa√ß√£o de um programa de reconhecimento e recompensas por desempenho;\n" +
              "- Revisar o pacote de benef√≠cios oferecido, buscando alternativas que agreguem valor aos colaboradores.";
      break;
      
    case "Ambiente F√≠sico e Seguran√ßa":
      text += "Recomenda-se: \n" +
              "- Realizar uma avalia√ß√£o ergon√¥mica dos postos de trabalho;\n" +
              "- Verificar as condi√ß√µes de ilumina√ß√£o, temperatura e ru√≠do;\n" +
              "- Implementar melhorias nas instala√ß√µes e equipamentos, priorizando a seguran√ßa e o conforto dos colaboradores.";
      break;
      
    case "Autonomia e Clareza de Fun√ß√£o":
      text += "Recomenda-se: \n" +
              "- Revisar as descri√ß√µes de cargo, garantindo clareza nas fun√ß√µes e responsabilidades;\n" +
              "- Implementar um programa de desenvolvimento de lideran√ßas que estimule a delega√ß√£o e autonomia;\n" +
              "- Estabelecer metas realistas e alcan√ß√°veis, com recursos adequados para sua realiza√ß√£o.";
      break;
      
    case "Lideran√ßa e Gest√£o":
      text += "Recomenda-se: \n" +
              "- Oferecer treinamentos em lideran√ßa e gest√£o de pessoas para os gestores;\n" +
              "- Implementar avalia√ß√µes de feedback 360¬∞ para identificar pontos de melhoria na gest√£o;\n" +
              "- Promover encontros regulares entre gestores e equipes para alinhamento de expectativas.";
      break;
      
    case "Rela√ß√µes Interpessoais":
      text += "Recomenda-se: \n" +
              "- Desenvolver atividades de integra√ß√£o e teambuilding;\n" +
              "- Implementar uma pol√≠tica clara contra ass√©dio e discrimina√ß√£o;\n" +
              "- Oferecer treinamentos sobre comunica√ß√£o n√£o-violenta e gest√£o de conflitos.";
      break;
      
    case "Desenvolvimento Profissional":
      text += "Recomenda-se: \n" +
              "- Criar um plano de desenvolvimento individual para cada colaborador;\n" +
              "- Implementar programas de mentoria e coaching;\n" +
              "- Oferecer oportunidades de capacita√ß√£o e atualiza√ß√£o profissional.";
      break;
      
    case "Comunica√ß√£o":
      text += "Recomenda-se: \n" +
              "- Estabelecer canais claros de comunica√ß√£o interna;\n" +
              "- Realizar reuni√µes peri√≥dicas para compartilhamento de informa√ß√µes entre setores;\n" +
              "- Implementar uma pol√≠tica de transpar√™ncia nas decis√µes organizacionais.";
      break;
      
    case "Sa√∫de Mental e Bem-estar":
      text += "Recomenda-se: \n" +
              "- Implementar um programa de qualidade de vida no trabalho;\n" +
              "- Oferecer suporte psicol√≥gico para colaboradores que precisem;\n" +
              "- Promover a√ß√µes de conscientiza√ß√£o sobre sa√∫de mental e gerenciamento do estresse.";
      break;
  }
  
  text += "\n\nRecomenda√ß√µes adicionais:\n" +
          "- Repetir esta avalia√ß√£o anualmente para monitorar o progresso;\n" +
          "- Criar grupos de trabalho para abordar os problemas espec√≠ficos identificados;\n" +
          "- Desenvolver um plano de a√ß√£o com prazos e respons√°veis para implementa√ß√£o das melhorias sugeridas.\n\n" +
          "A promo√ß√£o de um ambiente de trabalho psicologicamente saud√°vel n√£o s√≥ beneficia a sa√∫de e bem-estar dos " +
          "colaboradores, mas tamb√©m contribui para a redu√ß√£o do absente√≠smo, aumento da produtividade e melhoria " +
          "da qualidade do trabalho.";
  
  return text;
}

// Fun√ß√£o doGet para servir a p√°gina HTML
function doGet() {
  var template = HtmlService.createTemplateFromFile('index');
  return template.evaluate()
      .setTitle('Elaborador - Avalia√ß√£o psicossocial')
      .addMetaTag('viewport', 'width=device-width, initial-scale=1.0, minimum-scale=1.0')
      .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL)
      .setFaviconUrl('https://www.google.com/favicon.ico')
      .setSandboxMode(HtmlService.SandboxMode.IFRAME);
}

// Fun√ß√£o para incluir arquivos HTML
function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

// Fun√ß√µes para comunica√ß√£o com o frontend via Google Apps Script Web App
function processForm(formData) {
  try {
    var result = createPsychosocialRiskForm(
      formData.companyName, 
      parseInt(formData.expectedResponses), 
      formData.reportEmail
    );
    
    return {
      success: true,
      formUrl: result.shortUrl,
      companyKey: result.companyKey,
      message: "Formul√°rio criado com sucesso para " + formData.companyName
    };
  } catch (e) {
    return {
      success: false,
      error: e.toString(),
      message: "Erro ao criar formul√°rio. Por favor, tente novamente."
    };
  }
}

// Fun√ß√£o para obter status das respostas (chamada pelo frontend)
function checkFormStatus(companyKey) {
  try {
    var status = getResponseStatus(companyKey);
    return {
      success: true,
      data: status
    };
  } catch (e) {
    return {
      success: false,
      error: e.toString(),
      message: "Erro ao verificar status. Por favor, tente novamente."
    };
  }
}

// Fun√ß√£o para gerar relat√≥rio (chamada pelo frontend)
function requestReport(companyKey) {
  try {
    var result = generateAndSendReport(companyKey);
    return result;
  } catch (e) {
    return {
      success: false,
      error: e.toString(),
      message: "Erro ao gerar relat√≥rio. Por favor, tente novamente."
    };
  }
}
